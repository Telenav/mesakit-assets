
@startuml

    !include lexakai.theme
    
    title "com.telenav.mesakit.map.data.formats.pbf.processing"
    
    enum PbfDataProcessor.Action
    {
        ACCEPTED
        DISCARDED
        FILTERED_OUT
    }
    
    PbfDataProcessor --> PbfDataProcessor.Action : "guided by"
    interface PbfDataProcessor
    {
        --
        +void onBounds(Bound bounds)
        +void onEntity(PbfEntity<?>)
        +Action onNode(PbfNode)
        +void onNodes(Collection<PbfNode> nodes)
        +Action onRelation(PbfRelation)
        +void onRelations(Collection<PbfRelation> relations)
        +Action onWay(PbfWay)
        +void onWays(Collection<PbfWay> ways)
        --(lifecycle)--
        +void onEndNodes()
        +void onEndRelations()
        +void onEndWays()
        +void onStartNodes()
        +void onStartRelations()
        +void onStartWays()
        --(metadata)--
        +void onMetadata(Map<String,String> metadata)
    }
    
    interface Broadcaster
    Broadcaster <|-- PbfDataSource
    PbfDataSource --> PbfDataProcessor : "calls"
    PbfDataSource --> PbfDataStatistics : "collects"
    interface PbfDataSource
    {
        --
        +void expectedNodes(Count nodes)
        +void expectedRelations(Count relations)
        +void expectedWays(Count ways)
        +void phase(String phase)
        +PbfDataStatistics process(PbfDataProcessor)
        --(collection)--
        +Map<String,String> metadata()
        +Count nodes()
        +Count relations()
        +Count ways()
        --(extension points)--
        +PbfDataStatistics onProcess(PbfDataProcessor)
        --(lifecycle)--
        +void onEnd()
        +void onStart()
    }
    
    class PbfDataStatistics
    {
        --(constructors)--
        +PbfDataStatistics(Resource)
        --(checks)--
        +boolean isValid()
        --(collection)--
        +Bytes dataSize()
        +Count nodes()
        +Count relations()
        +Count ways()
        --(math)--
        +void incrementNodes()
        +void incrementRelations()
        +void incrementWays()
    }
    
    RuntimeException <|-- PbfStopProcessingException
    class PbfStopProcessingException
    {
    }
    
@enduml

