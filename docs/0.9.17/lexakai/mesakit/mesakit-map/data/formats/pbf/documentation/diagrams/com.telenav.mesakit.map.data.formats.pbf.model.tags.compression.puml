
@startuml

    !include lexakai.theme
    
    title "com.telenav.mesakit.map.data.formats.pbf.model.tags.compression"
    
    interface PbfTagCodec
    
    PbfCharacterCodecBuilder --> HuffmanCharacterCodec : "builds"
    PbfCharacterCodecBuilder --> CharacterFrequencies : "builds"
    class PbfCharacterCodecBuilder
    {
        --
        +void sample(PbfEntity<?>)
        --(primitive)--
        +HuffmanCharacterCodec build()
    }
    
    PbfDefaultCodecs "1" --> "2" HuffmanCharacterCodec : "provides"
    PbfDefaultCodecs "1" --> "2" HuffmanStringCodec : "provides"
    class PbfDefaultCodecs
    {
        --(constructors)--
        #PbfDefaultCodecs()
        --
        +HuffmanStringCodec defaultValueStringCodec()
        +PbfDefaultCodecs get()
        --(collection)--
        +HuffmanCharacterCodec defaultKeyCharacterCodec()
        +HuffmanStringCodec defaultKeyStringCodec()
        +PropertyMap keyCharacterCodecFrequencies()
        +PropertyMap keyStringCodecFrequencies()
        +PropertyMap roadNameCharacterCodecFrequencies()
        +PropertyMap valueCharacterCodecFrequencies()
        +PropertyMap valueStringCodecFrequencies()
        --(primitive)--
        +HuffmanCharacterCodec defaultValueCharacterCodec()
    }
    
    PbfTagCodec <|-- PbfStringListTagCodec
    note right of PbfStringListTagCodec
        Created from metadata
    endnote
    class PbfStringListTagCodec
    {
        --(constructors)--
        #PbfStringListTagCodec()
        +PbfStringListTagCodec(StringListCodec, StringListCodec)
    }
    
    interface PbfTagCodec
    {
        --
        +void encode(ByteList output, PbfTagList tags)
        --(collection)--
        +PbfTagList decode(ByteList input)
        +PbfTagMap decodeMap(ByteList input)
    }
    
    PbfTagCodecBuilder o-- WayFilter
    PbfTagCodecBuilder "1" o-- "2" StringFrequencies : "collects"
    PbfTagCodecBuilder "1" o-- "2" CharacterFrequencies : "collects"
    PbfTagCodecBuilder "1" o-- "2" HuffmanCharacterCodec : "builds"
    PbfTagCodecBuilder "1" o-- "2" HuffmanStringCodec : "builds"
    class PbfTagCodecBuilder
    {
        --
        +void sample(PbfEntity<?>)
        +HuffmanStringCodec valueStringCodec()
        --(building)--
        +void build(File input)
        +void buildCharacterCodecs()
        +void buildCharacterCodecs(File input)
        +void buildStringCodecs(File input)
        +void buildStringCodecs()
        +PbfTagCodecBuilder charactersMaximumBits(Maximum charactersMaximumBits)
        +PbfTagCodecBuilder charactersMinimumOccurrences(Minimum charactersMinimumOccurrences)
        +PbfTagCodecBuilder relationFilter(RelationFilter)
        +PbfTagCodecBuilder sampleFrequency(Integer sampleFrequency)
        +PbfTagCodecBuilder stringsMaximum(Maximum stringsMaximum)
        +PbfTagCodecBuilder stringsMaximumBits(Maximum stringsMaximumBits)
        +PbfTagCodecBuilder stringsMinimumOccurrences(Minimum stringsMinimumOccurrences)
        +PbfTagCodecBuilder wayFilter(WayFilter)
        --(collection)--
        +HuffmanStringCodec keyStringCodec()
        --(primitive)--
        +void addCharacters(PbfEntity<?>)
        +HuffmanCharacterCodec keyCharacterCodec()
        +HuffmanCharacterCodec valueCharacterCodec()
        --(write)--
        +void output()
    }
    
@enduml

