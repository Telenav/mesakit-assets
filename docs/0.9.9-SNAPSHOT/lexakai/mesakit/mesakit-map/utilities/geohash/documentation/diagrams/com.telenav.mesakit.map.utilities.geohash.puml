@startuml

    !include lexakai.theme
    
    title "com.telenav.mesakit.map.utilities.geohash"
    
    interface CharSequence
    interface GeohashAlphabet
    
    GeohashAlphabet <|-- Base32GeohashAlphabet
    class Base32GeohashAlphabet
    {
    }
    
    class BitArray
    {
        --
        +int length()
        --(checks)--
        +boolean isSet(int index)
        --(collection)--
        +List<Boolean> allBits()
    }
    
    class Geohasher.Builder
    {
        --(constructors)--
        +Builder()
        +Builder(GeohashAlphabet)
        --(building)--
        +Builder allowBorderCrossings(boolean allowBorderCrossings)
        +Builder borderCompactingTolerance(int borderCompactingTolerance)
        +Geohasher build()
        +Builder interiorCompactingTolerance(int interiorCompactingTolerance)
        +Builder resolution(int resolution)
    }
    
    class BitArray.Builder
    {
    }
    
    CharSequence <|-- Code
    class Code
    {
        --(constructors)--
        +Code(GeohashAlphabet, String)
        +Code(String)
        --
        +Code root()
        +Code root(GeohashAlphabet)
        --(checks)--
        +boolean isRoot()
    }
    
    class Codec
    {
        --(constructors)--
        +Codec(GeohashAlphabet)
        --
        +Rectangle decode(Code)
        +Code encode(Location, int resolution)
    }
    
    class Geohash
    {
        --(constructors)--
        +Geohash(Code)
        +Geohash(GeohashAlphabet, Location, int)
        +Geohash(Location, int)
        --
        +Rectangle bounds()
        +Collection<Geohash> children()
        +Code code()
        +int depth()
        +int numberOfChildren()
        +Geohash parent()
        +Geohash world()
        +Geohash world(GeohashAlphabet)
        --(checks)--
        +boolean isWorld()
        --(math)--
        +int maximumDepth()
    }
    
    interface GeohashAlphabet
    {
        --
        +char get(int index)
        --(checks)--
        +boolean isValid(String text)
        --(collection)--
        +int indexOf(char character)
        --(math)--
        +int maximumTextLength()
        --(primitive)--
        +int bitsPerCharacter()
        +Collection<Character> characters()
        +int numberOfCharacters()
    }
    
    class GeohashOrganizer
    {
        --(constructors)--
        #GeohashOrganizer()
        +GeohashOrganizer(int, int)
        --
        +Collection<Geohash> all()
        --(collection)--
        +void add(Geohash)
    }
    
    Project <|-- GeohashProject
    class GeohashProject
    {
        --(constructors)--
        #GeohashProject()
        --
        +GeohashProject get()
    }
    
    class Geohasher
    {
        --
        +Collection<Geohash> geohashes(Polygon)
    }
    
    class GeohashOrganizer.Node
    {
        --(constructors)--
        +Node(Geohash)
        --
        +void compact()
        +Geohash geohash()
        +int numberOfMissingChildren()
        --(checks)--
        +boolean isLeaf()
        --(collection)--
        +void add(Node)
    }
    
    class GeohashOrganizer.TreeLevel
    {
        --
        +Node get(Geohash)
        +Collection<Node> nodes()
        --(collection)--
        +Node add(Geohash)
        +boolean contains(Geohash)
        +void remove(Geohash)
    }
    
@enduml

