<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="1068.75px" preserveAspectRatio="none" style="width:1940px;height:1068px;background:#333333;" version="1.1" viewBox="0 0 1940 1068" width="1940.625px" zoomAndPan="magnify"><defs/><g><rect fill="#48494B" height="41.2028" rx="8.3333" ry="8.3333" style="stroke:#545454;stroke-width:1.0416666666666667;" width="653.125" x="636.4583" y="2.0833"/><text fill="#C0C0C0" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="20.8333" lengthAdjust="spacing" textLength="630.2083" x="647.9167" y="30.5583">com.telenav.mesakit.graph.specifications.common.vertex.store</text><!--MD5=[c6dd7699ff04048cb9365e543f81bf42]
class Initializable--><rect codeLine="6" fill="#282828" height="48.055" id="Initializable" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="113.5417" x="7.2917" y="93.2861"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="113.5417" x="7.2917" y="93.2861"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="113.5417" x="7.2917" y="116.3411"/><rect codeLine="6" fill="none" height="48.055" id="Initializable" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="113.5417" x="7.2917" y="93.2861"/><ellipse cx="21.875" cy="108.9803" fill="#008400" rx="10.4167" ry="10.4167" style="stroke:#239C23;stroke-width:1.0416666666666667;"/><path d="M19.279,106.1422 L19.279,104.5553 L24.705,104.5553 L24.705,106.1422 L22.8923,106.1422 L22.8923,112.0809 L24.705,112.0809 L24.705,113.6678 L19.279,113.6678 L19.279,112.0809 L21.0917,112.0809 L21.0917,106.1422 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="76.0417" x="38.5417" y="113.7044">Initializable</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="8.3333" x2="119.7917" y1="124.6745" y2="124.6745"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="8.3333" x2="119.7917" y1="133.0078" y2="133.0078"/><!--MD5=[5cc06ecdd9480702b567e3f11ad511a4]
class NamedObject--><rect codeLine="7" fill="#282828" height="48.055" id="NamedObject" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="123.9583" x="711.4583" y="93.2861"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="123.9583" x="711.4583" y="93.2861"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="123.9583" x="711.4583" y="116.3411"/><rect codeLine="7" fill="none" height="48.055" id="NamedObject" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="123.9583" x="711.4583" y="93.2861"/><ellipse cx="726.0417" cy="108.9803" fill="#008400" rx="10.4167" ry="10.4167" style="stroke:#239C23;stroke-width:1.0416666666666667;"/><path d="M723.4456,106.1422 L723.4456,104.5553 L728.8717,104.5553 L728.8717,106.1422 L727.0589,106.1422 L727.0589,112.0809 L728.8717,112.0809 L728.8717,113.6678 L723.4456,113.6678 L723.4456,112.0809 L725.2584,112.0809 L725.2584,106.1422 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="86.4583" x="742.7083" y="113.7044">NamedObject</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="712.5" x2="834.375" y1="124.6745" y2="124.6745"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="712.5" x2="834.375" y1="133.0078" y2="133.0078"/><!--MD5=[7aca7191f476af6561cf4f43a12cda50]
class Validatable--><rect codeLine="8" fill="#282828" height="48.055" id="Validatable" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="109.375" x="157.2917" y="93.2861"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="109.375" x="157.2917" y="93.2861"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="109.375" x="157.2917" y="116.3411"/><rect codeLine="8" fill="none" height="48.055" id="Validatable" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="109.375" x="157.2917" y="93.2861"/><ellipse cx="171.875" cy="108.9803" fill="#008400" rx="10.4167" ry="10.4167" style="stroke:#239C23;stroke-width:1.0416666666666667;"/><path d="M169.279,106.1422 L169.279,104.5553 L174.705,104.5553 L174.705,106.1422 L172.8923,106.1422 L172.8923,112.0809 L174.705,112.0809 L174.705,113.6678 L169.279,113.6678 L169.279,112.0809 L171.0917,112.0809 L171.0917,106.1422 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="71.875" x="188.5417" y="113.7044">Validatable</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="158.3333" x2="265.625" y1="124.6745" y2="124.6745"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="158.3333" x2="265.625" y1="133.0078" y2="133.0078"/><!--MD5=[093b953be813e764de2c1810942591fd]
class CompressibleCollection--><rect codeLine="9" fill="#282828" height="48.055" id="CompressibleCollection" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="192.7083" x="482.2917" y="93.2861"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="192.7083" x="482.2917" y="93.2861"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="192.7083" x="482.2917" y="116.3411"/><rect codeLine="9" fill="none" height="48.055" id="CompressibleCollection" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="192.7083" x="482.2917" y="93.2861"/><ellipse cx="496.875" cy="108.9803" fill="#008400" rx="10.4167" ry="10.4167" style="stroke:#239C23;stroke-width:1.0416666666666667;"/><path d="M494.279,106.1422 L494.279,104.5553 L499.705,104.5553 L499.705,106.1422 L497.8923,106.1422 L497.8923,112.0809 L499.705,112.0809 L499.705,113.6678 L494.279,113.6678 L494.279,112.0809 L496.0917,112.0809 L496.0917,106.1422 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="155.2083" x="513.5417" y="113.7044">CompressibleCollection</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="483.3333" x2="673.9583" y1="124.6745" y2="124.6745"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="483.3333" x2="673.9583" y1="133.0078" y2="133.0078"/><!--MD5=[69ad8e2c3e1a3785241f5b510ee951fe]
class KryoSerializable--><rect codeLine="10" fill="#282828" height="48.055" id="KryoSerializable" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="141.6667" x="303.6458" y="93.2861"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="141.6667" x="303.6458" y="93.2861"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="141.6667" x="303.6458" y="116.3411"/><rect codeLine="10" fill="none" height="48.055" id="KryoSerializable" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="141.6667" x="303.6458" y="93.2861"/><ellipse cx="318.2292" cy="108.9803" fill="#008400" rx="10.4167" ry="10.4167" style="stroke:#239C23;stroke-width:1.0416666666666667;"/><path d="M315.6331,106.1422 L315.6331,104.5553 L321.0592,104.5553 L321.0592,106.1422 L319.2464,106.1422 L319.2464,112.0809 L321.0592,112.0809 L321.0592,113.6678 L315.6331,113.6678 L315.6331,112.0809 L317.4459,112.0809 L317.4459,106.1422 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="104.1667" x="334.8958" y="113.7044">KryoSerializable</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="304.6875" x2="444.2708" y1="124.6745" y2="124.6745"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="304.6875" x2="444.2708" y1="133.0078" y2="133.0078"/><!--MD5=[b32166fdcac6851d490182bfc54d5699]
class ConnectivityStore--><rect codeLine="17" fill="#282828" height="490.7756" id="ConnectivityStore" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="461.4583" x="117.7083" y="407.3486"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="461.4583" x="117.7083" y="407.3486"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="461.4583" x="117.7083" y="430.4036"/><rect codeLine="17" fill="none" height="490.7756" id="ConnectivityStore" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="461.4583" x="117.7083" y="407.3486"/><ellipse cx="283.8542" cy="423.0428" fill="#0066CF" rx="10.4167" ry="10.4167" style="stroke:#0086EF;stroke-width:1.0416666666666667;"/><path d="M285.7646,427.4679 Q285.3373,427.6876 284.8674,427.7974 Q284.3974,427.9073 283.8786,427.9073 Q282.0353,427.9073 281.0649,426.6927 Q280.0944,425.4781 280.0944,423.1832 Q280.0944,420.8822 281.0649,419.6676 Q282.0353,418.453 283.8786,418.453 Q284.3974,418.453 284.8735,418.5628 Q285.3495,418.6727 285.7646,418.8924 L285.7646,420.8944 Q285.3007,420.4671 284.8643,420.2688 Q284.4279,420.0704 283.964,420.0704 Q282.9753,420.0704 282.4717,420.8547 Q281.9682,421.639 281.9682,423.1832 Q281.9682,424.7213 282.4717,425.5056 Q282.9753,426.2899 283.964,426.2899 Q284.4279,426.2899 284.8643,426.0915 Q285.3007,425.8931 285.7646,425.4659 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="114.5833" x="306.7708" y="427.7669">ConnectivityStore</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="118.75" x2="578.125" y1="438.737" y2="438.737"/><polygon fill="#FFFF44" points="129.1667,468.8985,133.3333,473.0652,129.1667,477.2319,125,473.0652" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="107.2917" x="140.625" y="481.0181">ConnectivityStore()</text><ellipse cx="129.1667" cy="493.8517" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="181.25" x="140.625" y="500.7629">ConnectivityStore(String, Graph)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="118.75" x2="304.6875" y1="456.9427" y2="456.9427"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="81.25" x="307.8125" y="460.7524">(constructors)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="392.1875" x2="578.125" y1="456.9427" y2="456.9427"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="118.75" x2="578.125" y1="510.4716" y2="510.4716"/><ellipse cx="129.1667" cy="521.9299" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="143.75" x="140.625" y="528.8411">void freeTemporaryData()</text><ellipse cx="129.1667" cy="541.6748" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="103.125" x="140.625" y="548.586">void graph(Graph)</text><ellipse cx="129.1667" cy="561.4197" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="298.9583" x="140.625" y="568.3309">EdgeSequence retrieveEdgeSequence(int vertexIndex)</text><ellipse cx="129.1667" cy="581.1646" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="309.375" x="140.625" y="588.0758">EdgeSequence retrieveInEdgeSequence(int vertexIndex)</text><ellipse cx="129.1667" cy="600.9094" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="226.0417" x="140.625" y="607.8206">EdgeSet retrieveInEdges(int vertexIndex)</text><ellipse cx="129.1667" cy="620.6543" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="319.7917" x="140.625" y="627.5655">EdgeSequence retrieveOutEdgeSequence(int vertexIndex)</text><ellipse cx="129.1667" cy="640.3992" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="236.4583" x="140.625" y="647.3104">EdgeSet retrieveOutEdges(int vertexIndex)</text><ellipse cx="129.1667" cy="660.144" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="343.75" x="140.625" y="667.0553">EdgeSequence retrieveTwoWayEdgeSequence(int vertexIndex)</text><ellipse cx="129.1667" cy="679.8889" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="429.1667" x="140.625" y="686.8001">void storeLists(int vertexIndex, IntIterator, IntIterator out, IntIterator twoWay)</text><ellipse cx="129.1667" cy="699.6338" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="236.4583" x="140.625" y="706.545">void storeTemporaryLists(int vertexIndex)</text><ellipse cx="129.1667" cy="719.3787" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="389.5833" x="140.625" y="726.2899">void temporaryConnect(Edge, int fromVertexIndex, int toVertexIndex)</text><ellipse cx="129.1667" cy="739.1235" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="405.2083" x="140.625" y="746.0347">void temporaryDisconnect(Edge, int fromVertexIndex, int toVertexIndex)</text><ellipse cx="129.1667" cy="758.8684" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="400" x="140.625" y="765.7796">boolean temporaryIsConnected(int fromVertexIndex, int toVertexIndex)</text><ellipse cx="129.1667" cy="802.5248" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="214.5833" x="140.625" y="809.436">int retrieveEdgeCount(int vertexIndex)</text><ellipse cx="129.1667" cy="822.2697" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="225" x="140.625" y="829.1809">int retrieveInEdgeCount(int vertexIndex)</text><ellipse cx="129.1667" cy="842.0146" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="235.4167" x="140.625" y="848.9258">int retrieveOutEdgeCount(int vertexIndex)</text><ellipse cx="129.1667" cy="861.7594" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="259.375" x="140.625" y="868.6707">int retrieveTwoWayEdgeCount(int vertexIndex)</text><ellipse cx="129.1667" cy="881.5043" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="95.8333" x="140.625" y="888.4155">int vertexCount()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="118.75" x2="314.0625" y1="785.3607" y2="785.3607"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="62.5" x="317.1875" y="789.1703">(collection)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="382.8125" x2="578.125" y1="785.3607" y2="785.3607"/><!--MD5=[35943e46ab8bfc75dd0787e7cb08e94e]
class EdgeArrayStore--><rect codeLine="46" fill="#282828" height="253.8371" id="EdgeArrayStore" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="315.625" x="615.625" y="525.5778"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="315.625" x="615.625" y="525.5778"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="315.625" x="615.625" y="548.6328"/><rect codeLine="46" fill="none" height="253.8371" id="EdgeArrayStore" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="315.625" x="615.625" y="525.5778"/><ellipse cx="716.6667" cy="541.272" fill="#0066CF" rx="10.4167" ry="10.4167" style="stroke:#0086EF;stroke-width:1.0416666666666667;"/><path d="M718.5771,545.697 Q718.1498,545.9167 717.6799,546.0266 Q717.2099,546.1365 716.6911,546.1365 Q714.8478,546.1365 713.8774,544.9219 Q712.9069,543.7073 712.9069,541.4124 Q712.9069,539.1113 713.8774,537.8967 Q714.8478,536.6821 716.6911,536.6821 Q717.2099,536.6821 717.686,536.792 Q718.162,536.9019 718.5771,537.1216 L718.5771,539.1235 Q718.1132,538.6963 717.6768,538.4979 Q717.2404,538.2996 716.7765,538.2996 Q715.7878,538.2996 715.2842,539.0839 Q714.7807,539.8682 714.7807,541.4124 Q714.7807,542.9504 715.2842,543.7347 Q715.7878,544.519 716.7765,544.519 Q717.2404,544.519 717.6768,544.3207 Q718.1132,544.1223 718.5771,543.6951 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="98.9583" x="739.5833" y="545.9961">EdgeArrayStore</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="616.6667" x2="930.2083" y1="556.9661" y2="556.9661"/><polygon fill="#FFFF44" points="627.0833,587.1277,631.25,591.2944,627.0833,595.461,622.9167,591.2944" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="95.8333" x="638.5417" y="599.2472">EdgeArrayStore()</text><ellipse cx="627.0833" cy="612.0809" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="185.4167" x="638.5417" y="618.9921">EdgeArrayStore(String, Metadata)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="616.6667" x2="729.6875" y1="575.1719" y2="575.1719"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="81.25" x="732.8125" y="578.9815">(constructors)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="817.1875" x2="930.2083" y1="575.1719" y2="575.1719"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="616.6667" x2="930.2083" y1="628.7008" y2="628.7008"/><ellipse cx="627.0833" cy="640.1591" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="283.3333" x="638.5417" y="647.0703">EdgeSequence edgeSequence(EdgeStore, int index)</text><ellipse cx="627.0833" cy="683.8155" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="111.4583" x="638.5417" y="690.7267">IntList list(int index)</text><ellipse cx="627.0833" cy="703.5604" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="202.0833" x="638.5417" y="710.4716">void list(int index, IntIterator values)</text><ellipse cx="627.0833" cy="723.3053" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="144.7917" x="638.5417" y="730.2165">int list(List&lt;Edge&gt; edges)</text><ellipse cx="627.0833" cy="743.0501" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="47.9167" x="638.5417" y="749.9613">int size()</text><ellipse cx="627.0833" cy="762.795" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="96.875" x="638.5417" y="769.7062">int size(int index)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="616.6667" x2="739.0625" y1="666.6514" y2="666.6514"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="62.5" x="742.1875" y="670.461">(collection)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="807.8125" x2="930.2083" y1="666.6514" y2="666.6514"/><!--MD5=[3bbe92c3bd2884812b10884f5bf277ce]
class GraphNode--><rect fill="#282828" height="48.055" id="GraphNode" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="109.375" x="988.5417" y="93.2861"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="109.375" x="988.5417" y="93.2861"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="109.375" x="988.5417" y="116.3411"/><rect fill="none" height="48.055" id="GraphNode" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="109.375" x="988.5417" y="93.2861"/><ellipse cx="1003.125" cy="108.9803" fill="#0066CF" rx="10.4167" ry="10.4167" style="stroke:#0086EF;stroke-width:1.0416666666666667;"/><path d="M1005.0354,113.4054 Q1004.6082,113.6251 1004.1382,113.7349 Q1003.6682,113.8448 1003.1494,113.8448 Q1001.3062,113.8448 1000.3357,112.6302 Q999.3652,111.4156 999.3652,109.1207 Q999.3652,106.8197 1000.3357,105.6051 Q1001.3062,104.3905 1003.1494,104.3905 Q1003.6682,104.3905 1004.1443,104.5003 Q1004.6204,104.6102 1005.0354,104.8299 L1005.0354,106.8319 Q1004.5715,106.4046 1004.1351,106.2063 Q1003.6987,106.0079 1003.2349,106.0079 Q1002.2461,106.0079 1001.7426,106.7922 Q1001.239,107.5765 1001.239,109.1207 Q1001.239,110.6588 1001.7426,111.4431 Q1002.2461,112.2274 1003.2349,112.2274 Q1003.6987,112.2274 1004.1351,112.029 Q1004.5715,111.8306 1005.0354,111.4034 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="71.875" x="1019.7917" y="113.7044">GraphNode</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="989.5833" x2="1096.875" y1="124.6745" y2="124.6745"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="989.5833" x2="1096.875" y1="133.0078" y2="133.0078"/><!--MD5=[46f4755507280e1b2bf86c138ccec23e]
class GraphNodeIndex--><rect codeLine="62" fill="#282828" height="83.3781" id="GraphNodeIndex" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="150" x="968.2292" y="610.9945"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="150" x="968.2292" y="610.9945"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="150" x="968.2292" y="634.0495"/><rect codeLine="62" fill="none" height="83.3781" id="GraphNodeIndex" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="150" x="968.2292" y="610.9945"/><ellipse cx="985.1563" cy="626.6886" fill="#0066CF" rx="10.4167" ry="10.4167" style="stroke:#0086EF;stroke-width:1.0416666666666667;"/><path d="M987.0667,631.1137 Q986.6394,631.3334 986.1694,631.4433 Q985.6995,631.5531 985.1807,631.5531 Q983.3374,631.5531 982.3669,630.3385 Q981.3965,629.1239 981.3965,626.829 Q981.3965,624.528 982.3669,623.3134 Q983.3374,622.0988 985.1807,622.0988 Q985.6995,622.0988 986.1755,622.2087 Q986.6516,622.3185 987.0667,622.5382 L987.0667,624.5402 Q986.6028,624.113 986.1664,623.9146 Q985.73,623.7162 985.2661,623.7162 Q984.2773,623.7162 983.7738,624.5005 Q983.2703,625.2848 983.2703,626.829 Q983.2703,628.3671 983.7738,629.1514 Q984.2773,629.9357 985.2661,629.9357 Q985.73,629.9357 986.1664,629.7373 Q986.6028,629.539 987.0667,629.1117 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="107.2917" x="1002.3438" y="631.4128">GraphNodeIndex</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="969.2708" x2="1117.1875" y1="642.3828" y2="642.3828"/><ellipse cx="979.6875" cy="677.7527" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="117.7083" x="991.1458" y="684.6639">GraphNodeIndex(int)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="969.2708" x2="999.4792" y1="660.5886" y2="660.5886"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="81.25" x="1002.6042" y="664.3982">(constructors)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1086.9792" x2="1117.1875" y1="660.5886" y2="660.5886"/><!--MD5=[21d696a13fa798903dbd0af1f8786902]
class ConnectivityStore.Sequence--><rect codeLine="68" fill="#282828" height="127.0345" id="ConnectivityStore.Sequence" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="215.625" x="1187.5" y="53.7028"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="215.625" x="1187.5" y="53.7028"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="215.625" x="1187.5" y="76.7578"/><rect codeLine="68" fill="none" height="127.0345" id="ConnectivityStore.Sequence" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="215.625" x="1187.5" y="53.7028"/><ellipse cx="1202.0833" cy="69.397" fill="#CF6300" rx="10.4167" ry="10.4167" style="stroke:#EF8300;stroke-width:1.0416666666666667;"/><path d="M1205.1392,74.0845 L1199.4629,74.0845 L1199.4629,64.9719 L1205.1392,64.9719 L1205.1392,66.5588 L1201.2634,66.5588 L1201.2634,68.5242 L1204.7729,68.5242 L1204.7729,70.1111 L1201.2634,70.1111 L1201.2634,72.4976 L1205.1392,72.4976 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="178.125" x="1218.75" y="74.1211">ConnectivityStore.Sequence</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1188.5417" x2="1402.0833" y1="85.0911" y2="85.0911"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="20.8333" x="1196.875" y="103.4607">ALL</text><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="11.4583" x="1196.875" y="123.2056">IN</text><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="25" x="1196.875" y="142.9504">OUT</text><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="57.2917" x="1196.875" y="162.6953">TWO_WAY</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1188.5417" x2="1402.0833" y1="172.404" y2="172.404"/><!--MD5=[c049b03582cbf5b5dee7257347c0cb04]
class NodeStore--><rect fill="#282828" height="48.055" id="NodeStore" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="104.1667" x="1492.1875" y="93.2861"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="104.1667" x="1492.1875" y="93.2861"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="104.1667" x="1492.1875" y="116.3411"/><rect fill="none" height="48.055" id="NodeStore" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="104.1667" x="1492.1875" y="93.2861"/><ellipse cx="1506.7708" cy="108.9803" fill="#0066CF" rx="10.4167" ry="10.4167" style="stroke:#0086EF;stroke-width:1.0416666666666667;"/><path d="M1508.6812,113.4054 Q1508.254,113.6251 1507.784,113.7349 Q1507.314,113.8448 1506.7952,113.8448 Q1504.952,113.8448 1503.9815,112.6302 Q1503.0111,111.4156 1503.0111,109.1207 Q1503.0111,106.8197 1503.9815,105.6051 Q1504.952,104.3905 1506.7952,104.3905 Q1507.314,104.3905 1507.7901,104.5003 Q1508.2662,104.6102 1508.6812,104.8299 L1508.6812,106.8319 Q1508.2174,106.4046 1507.781,106.2063 Q1507.3446,106.0079 1506.8807,106.0079 Q1505.8919,106.0079 1505.3884,106.7922 Q1504.8848,107.5765 1504.8848,109.1207 Q1504.8848,110.6588 1505.3884,111.4431 Q1505.8919,112.2274 1506.8807,112.2274 Q1507.3446,112.2274 1507.781,112.029 Q1508.2174,111.8306 1508.6812,111.4034 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="66.6667" x="1523.4375" y="113.7044">NodeStore</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1493.2292" x2="1595.3125" y1="124.6745" y2="124.6745"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1493.2292" x2="1595.3125" y1="133.0078" y2="133.0078"/><!--MD5=[c7f71bd839bf286aebad41baf588790c]
class VertexStore--><rect codeLine="77" fill="#282828" height="819.1935" id="VertexStore" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="778.125" x="1155.2083" y="243.2861"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="778.125" x="1155.2083" y="243.2861"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="778.125" x="1155.2083" y="266.3411"/><rect codeLine="77" fill="none" height="819.1935" id="VertexStore" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="778.125" x="1155.2083" y="243.2861"/><ellipse cx="1500" cy="258.9803" fill="#0066CF" rx="10.4167" ry="10.4167" style="stroke:#0086EF;stroke-width:1.0416666666666667;"/><path d="M1501.9104,263.4054 Q1501.4832,263.6251 1501.0132,263.7349 Q1500.5432,263.8448 1500.0244,263.8448 Q1498.1812,263.8448 1497.2107,262.6302 Q1496.2402,261.4156 1496.2402,259.1207 Q1496.2402,256.8197 1497.2107,255.6051 Q1498.1812,254.3905 1500.0244,254.3905 Q1500.5432,254.3905 1501.0193,254.5003 Q1501.4954,254.6102 1501.9104,254.8299 L1501.9104,256.8319 Q1501.4465,256.4046 1501.0101,256.2063 Q1500.5737,256.0079 1500.1099,256.0079 Q1499.1211,256.0079 1498.6176,256.7922 Q1498.114,257.5765 1498.114,259.1207 Q1498.114,260.6588 1498.6176,261.4431 Q1499.1211,262.2274 1500.1099,262.2274 Q1500.5737,262.2274 1501.0101,262.029 Q1501.4465,261.8306 1501.9104,261.4034 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="73.9583" x="1522.9167" y="263.7044">VertexStore</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="1156.25" x2="1932.2917" y1="274.6745" y2="274.6745"/><ellipse cx="1166.6667" cy="310.0444" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="108.3333" x="1178.125" y="316.9556">VertexStore(Graph)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1156.25" x2="1500.5208" y1="292.8802" y2="292.8802"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="81.25" x="1503.6458" y="296.6899">(constructors)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1588.0208" x2="1932.2917" y1="292.8802" y2="292.8802"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1156.25" x2="1932.2917" y1="326.6642" y2="326.6642"/><ellipse cx="1166.6667" cy="338.1226" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="112.5" x="1178.125" y="345.0338">void clipped(Vertex)</text><ellipse cx="1166.6667" cy="357.8674" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="123.9583" x="1178.125" y="364.7786">void clipped(Location)</text><ellipse cx="1166.6667" cy="377.6123" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="143.75" x="1178.125" y="384.5235">void freeTemporaryData()</text><ellipse cx="1166.6667" cy="397.3572" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="465.625" x="1178.125" y="404.2684">void gradeSeparate(Vertex originalVertex, GradeSeparation, EdgeSet edgesAtGrade)</text><ellipse cx="1166.6667" cy="417.1021" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="634.375" x="1178.125" y="424.0133">void gradeSeparatePerturbVertexLocation(Vertex, Vertex originalVertex, GradeSeparation, EdgeSet edgesAtGrade)</text><ellipse cx="1166.6667" cy="436.8469" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="745.8333" x="1178.125" y="443.7581">void gradeSeparateUpdateGradeSeparatedEdgeVertexes(HeavyWeightVertex newVertex, Vertex originalVertex, EdgeSet edgesAtGrade)</text><ellipse cx="1166.6667" cy="456.5918" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="423.9583" x="1178.125" y="463.503">boolean internalIsConnected(MapNodeIdentifier from, MapNodeIdentifier to)</text><ellipse cx="1166.6667" cy="476.3367" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="151.0417" x="1178.125" y="483.2479">GraphNode node(Location)</text><ellipse cx="1166.6667" cy="496.0815" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="251.0417" x="1178.125" y="502.9928">EdgeSequence retrieveEdgeSequence(Vertex)</text><ellipse cx="1166.6667" cy="515.8264" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="276.0417" x="1178.125" y="522.7376">GradeSeparation retrieveGradeSeparation(Vertex)</text><ellipse cx="1166.6667" cy="535.5713" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="261.4583" x="1178.125" y="542.4825">EdgeSequence retrieveInEdgeSequence(Vertex)</text><ellipse cx="1166.6667" cy="555.3162" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="178.125" x="1178.125" y="562.2274">EdgeSet retrieveInEdges(Vertex)</text><ellipse cx="1166.6667" cy="575.061" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="187.5" x="1178.125" y="581.9722">boolean retrieveIsClipped(Vertex)</text><ellipse cx="1166.6667" cy="594.8059" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="271.875" x="1178.125" y="601.7171">EdgeSequence retrieveOutEdgeSequence(Vertex)</text><ellipse cx="1166.6667" cy="614.5508" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="188.5417" x="1178.125" y="621.462">EdgeSet retrieveOutEdges(Vertex)</text><ellipse cx="1166.6667" cy="634.2957" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="157.2917" x="1178.125" y="641.2069">void storeAttributes(Vertex)</text><ellipse cx="1166.6667" cy="654.0405" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="292.7083" x="1178.125" y="660.9517">void storeGradeSeparation(Vertex, GradeSeparation)</text><ellipse cx="1166.6667" cy="673.7854" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="178.125" x="1178.125" y="680.6966">boolean supportsAllNodeTags()</text><ellipse cx="1166.6667" cy="693.5303" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="388.5417" x="1178.125" y="700.4415">VertexSequence vertexesInside(Rectangle bounds, Matcher&lt;Vertex&gt;)</text><polygon fill="#FFFF44" points="1166.6667,708.0668,1170.8333,712.2335,1166.6667,716.4001,1162.5,712.2335" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="178.125" x="1178.125" y="720.1864">ConnectivityStore connectivity()</text><ellipse cx="1166.6667" cy="756.9316" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="105.2083" x="1178.125" y="763.8428">void addVertexes()</text><ellipse cx="1166.6667" cy="776.6764" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="140.625" x="1178.125" y="783.5876">boolean contains(Vertex)</text><ellipse cx="1166.6667" cy="796.4213" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="190.625" x="1178.125" y="803.3325">boolean contains(VertexIdentifier)</text><ellipse cx="1166.6667" cy="816.1662" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="177.0833" x="1178.125" y="823.0774">boolean contains(MapIdentifier)</text><ellipse cx="1166.6667" cy="835.9111" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="186.4583" x="1178.125" y="842.8223">Count retrieveEdgeCount(Vertex)</text><ellipse cx="1166.6667" cy="855.6559" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="196.875" x="1178.125" y="862.5671">Count retrieveInEdgeCount(Vertex)</text><ellipse cx="1166.6667" cy="875.4008" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="207.2917" x="1178.125" y="882.312">Count retrieveOutEdgeCount(Vertex)</text><ellipse cx="1166.6667" cy="895.1457" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="192.7083" x="1178.125" y="902.0569">void temporaryAddVertexes(Edge)</text><ellipse cx="1166.6667" cy="914.8905" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="164.5833" x="1178.125" y="921.8018">void temporaryRemove(Edge)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1156.25" x2="1509.8958" y1="739.7675" y2="739.7675"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="62.5" x="1513.0208" y="743.5771">(collection)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1578.6458" x2="1932.2917" y1="739.7675" y2="739.7675"/><ellipse cx="1166.6667" cy="958.547" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="625" x="1178.125" y="965.4582">void gradeSeparateConnectEdgesToNewVertex(Vertex newVertex, Vertex originalVertex, EdgeSet edgesAtGrade)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1156.25" x2="1517.1875" y1="941.3829" y2="941.3829"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="47.9167" x="1520.3125" y="945.1925">(factory)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1571.3542" x2="1932.2917" y1="941.3829" y2="941.3829"/><ellipse cx="1166.6667" cy="1002.2034" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="287.5" x="1178.125" y="1009.1146">Vertex vertexForNodeIdentifier(long nodeIdentifier)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1156.25" x2="1516.1458" y1="985.0393" y2="985.0393"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="50" x="1519.2708" y="988.8489">(identity)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1572.3958" x2="1932.2917" y1="985.0393" y2="985.0393"/><ellipse cx="1166.6667" cy="1045.8598" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="277.0833" x="1178.125" y="1052.771">void loadVertexTags(PbfDataSource, PbfTagFilter)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1156.25" x2="1524.4792" y1="1028.6957" y2="1028.6957"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="33.3333" x="1527.6042" y="1032.5053">(read)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1564.0625" x2="1932.2917" y1="1028.6957" y2="1028.6957"/><!--MD5=[316bded90c36a4ef8389d2e3df44e03c]
reverse link Validatable to ConnectivityStore--><path codeLine="12" d="M223.1042,161.7757 C237.0208,216.1715 261.9583,313.609 285.9271,407.3278 " fill="none" id="Validatable-backto-ConnectivityStore" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="216.0313,163.5361,217.9271,141.5465,230.1563,159.9215,216.0313,163.5361" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[446ca86039503d5a3d84317896c475d6]
reverse link NamedObject to ConnectivityStore--><path codeLine="13" d="M728.1563,154.6403 C716.8854,163.3903 704.7292,172.5778 693.2292,180.7861 C651.8438,210.3278 632.8021,206.7861 597.3958,243.2861 C550.7083,291.4111 508.7083,349.7965 473.0833,407.1924 " fill="none" id="NamedObject-backto-ConnectivityStore" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="724.0417,148.5986,744.9271,141.4424,733.0625,160.057,724.0417,148.5986" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[bdf6b89cd76e7ab4d67d2d8bead85427]
reverse link KryoSerializable to ConnectivityStore--><path codeLine="14" d="M372.3229,162.5049 C369.6563,217.0465 364.9167,314.0257 360.3646,407.3278 " fill="none" id="KryoSerializable-backto-ConnectivityStore" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="365.0417,161.9945,373.3438,141.5465,379.6146,162.7132,365.0417,161.9945" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[0ccb17affce52f9b156a70a18a88cec2]
reverse link CompressibleCollection to ConnectivityStore--><path codeLine="15" d="M560.3438,160.6924 C536.9583,214.8695 494.6042,312.984 453.8854,407.3278 " fill="none" id="CompressibleCollection-backto-ConnectivityStore" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="553.6563,157.7861,568.6042,141.5465,567.0417,163.5674,553.6563,157.7861" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[da99c54334f2605c7f77a5757237f8d0]
reverse link Initializable to ConnectivityStore--><path codeLine="16" d="M86.2917,159.9736 C115.1042,214.0049 167.6458,312.557 218.1771,407.3278 " fill="none" id="Initializable-backto-ConnectivityStore" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="79.8333,163.359,76.4688,141.5465,92.6979,156.4945,79.8333,163.359" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[9399d2e25af80fae98e8e3e01a3c3efb]
reverse link CompressibleCollection to EdgeArrayStore--><path codeLine="44" d="M594.4583,161.5674 C623.0729,239.9215 684.4583,408.0049 727.3125,525.3486 " fill="none" id="CompressibleCollection-backto-EdgeArrayStore" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="587.4375,163.6195,587.1458,141.5465,601.1354,158.609,587.4375,163.6195" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[45fdcb532a630c8742929f0040e3742b]
reverse link NamedObject to EdgeArrayStore--><path codeLine="45" d="M773.4375,162.5778 C773.4375,241.359 773.4375,408.5049 773.4375,525.3486 " fill="none" id="NamedObject-backto-EdgeArrayStore" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="766.1458,162.3799,773.4375,141.5465,780.7292,162.3799,766.1458,162.3799" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[dbad1f84e4429e70a63dd4acf7b830c8]
reverse link GraphNode to GraphNodeIndex--><path codeLine="61" d="M1043.2292,162.432 C1043.2292,263.8799 1043.2292,512.432 1043.2292,610.682 " fill="none" id="GraphNode-backto-GraphNodeIndex" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="1035.9375,162.3799,1043.2292,141.5465,1050.5208,162.3799,1035.9375,162.3799" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[8b1cd313b810f0e6fde35e438b84a480]
reverse link NodeStore to VertexStore--><path codeLine="76" d="M1544.2708,162.7028 C1544.2708,183.9945 1544.2708,211.7132 1544.2708,243.1403 " fill="none" id="NodeStore-backto-VertexStore" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="1536.9792,162.3799,1544.2708,141.5465,1551.5625,162.3799,1536.9792,162.3799" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[2b587c980155f52664b901a8956413de]
@startuml

    !include lexakai.theme
    
    title "com.telenav.mesakit.graph.specifications.common.vertex.store"
    
    interface Initializable
    interface NamedObject
    interface Validatable
    interface CompressibleCollection
    interface KryoSerializable
    
    Validatable <|- - ConnectivityStore
    NamedObject <|- - ConnectivityStore
    KryoSerializable <|- - ConnectivityStore
    CompressibleCollection <|- - ConnectivityStore
    Initializable <|- - ConnectivityStore
    class ConnectivityStore
    {
        - -(constructors)- -
        #ConnectivityStore()
        +ConnectivityStore(String, Graph)
        - -
        +void freeTemporaryData()
        +void graph(Graph)
        +EdgeSequence retrieveEdgeSequence(int vertexIndex)
        +EdgeSequence retrieveInEdgeSequence(int vertexIndex)
        +EdgeSet retrieveInEdges(int vertexIndex)
        +EdgeSequence retrieveOutEdgeSequence(int vertexIndex)
        +EdgeSet retrieveOutEdges(int vertexIndex)
        +EdgeSequence retrieveTwoWayEdgeSequence(int vertexIndex)
        +void storeLists(int vertexIndex, IntIterator, IntIterator out, IntIterator twoWay)
        +void storeTemporaryLists(int vertexIndex)
        +void temporaryConnect(Edge, int fromVertexIndex, int toVertexIndex)
        +void temporaryDisconnect(Edge, int fromVertexIndex, int toVertexIndex)
        +boolean temporaryIsConnected(int fromVertexIndex, int toVertexIndex)
        - -(collection)- -
        +int retrieveEdgeCount(int vertexIndex)
        +int retrieveInEdgeCount(int vertexIndex)
        +int retrieveOutEdgeCount(int vertexIndex)
        +int retrieveTwoWayEdgeCount(int vertexIndex)
        +int vertexCount()
    }
    
    CompressibleCollection <|- - EdgeArrayStore
    NamedObject <|- - EdgeArrayStore
    class EdgeArrayStore
    {
        - -(constructors)- -
        #EdgeArrayStore()
        +EdgeArrayStore(String, Metadata)
        - -
        +EdgeSequence edgeSequence(EdgeStore, int index)
        - -(collection)- -
        +IntList list(int index)
        +void list(int index, IntIterator values)
        +int list(List<Edge> edges)
        +int size()
        +int size(int index)
    }
    
    GraphNode <|- - GraphNodeIndex
    class GraphNodeIndex
    {
        - -(constructors)- -
        +GraphNodeIndex(int)
    }
    
    enum ConnectivityStore.Sequence
    {
        ALL
        IN
        OUT
        TWO_WAY
    }
    
    NodeStore <|- - VertexStore
    class VertexStore
    {
        - -(constructors)- -
        +VertexStore(Graph)
        - -
        +void clipped(Vertex)
        +void clipped(Location)
        +void freeTemporaryData()
        +void gradeSeparate(Vertex originalVertex, GradeSeparation, EdgeSet edgesAtGrade)
        +void gradeSeparatePerturbVertexLocation(Vertex, Vertex originalVertex, GradeSeparation, EdgeSet edgesAtGrade)
        +void gradeSeparateUpdateGradeSeparatedEdgeVertexes(HeavyWeightVertex newVertex, Vertex originalVertex, EdgeSet edgesAtGrade)
        +boolean internalIsConnected(MapNodeIdentifier from, MapNodeIdentifier to)
        +GraphNode node(Location)
        +EdgeSequence retrieveEdgeSequence(Vertex)
        +GradeSeparation retrieveGradeSeparation(Vertex)
        +EdgeSequence retrieveInEdgeSequence(Vertex)
        +EdgeSet retrieveInEdges(Vertex)
        +boolean retrieveIsClipped(Vertex)
        +EdgeSequence retrieveOutEdgeSequence(Vertex)
        +EdgeSet retrieveOutEdges(Vertex)
        +void storeAttributes(Vertex)
        +void storeGradeSeparation(Vertex, GradeSeparation)
        +boolean supportsAllNodeTags()
        +VertexSequence vertexesInside(Rectangle bounds, Matcher<Vertex>)
        #ConnectivityStore connectivity()
        - -(collection)- -
        +void addVertexes()
        +boolean contains(Vertex)
        +boolean contains(VertexIdentifier)
        +boolean contains(MapIdentifier)
        +Count retrieveEdgeCount(Vertex)
        +Count retrieveInEdgeCount(Vertex)
        +Count retrieveOutEdgeCount(Vertex)
        +void temporaryAddVertexes(Edge)
        +void temporaryRemove(Edge)
        - -(factory)- -
        +void gradeSeparateConnectEdgesToNewVertex(Vertex newVertex, Vertex originalVertex, EdgeSet edgesAtGrade)
        - -(identity)- -
        +Vertex vertexForNodeIdentifier(long nodeIdentifier)
        - -(read)- -
        +void loadVertexTags(PbfDataSource, PbfTagFilter)
    }
    
@enduml

@startuml









skinparam backgroundColor #333333






skinparam  {
    defaultFontName   "Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif"
    defaultFontSize   12
    defaultTextAlignment left
    shadowing false
    RoundCorner 10
    TitleFontSize 18
}

skinparam defaultFontName       "Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif"
skinparam defaultFontSize       12
skinparam dpi                   100
skinparam shadowing             false
skinparam roundcorner           16
skinparam ParticipantPadding    40
skinparam BoxPadding            40
skinparam Padding               3
skinparam ArrowColor            #545454
skinparam stereotype {
    CBackgroundColor #0066cf
    CBorderColor #0086ef
    ABackgroundColor #C8Ac00
    ABorderColor #D8Bc00
    IBackgroundColor #008400
    IBorderColor #239c23
    EBackgroundColor #cf6300
    EBorderColor #ef8300
    NBackgroundColor #3380b9
    NBorderColor #004d86
}
skinparam title {
	FontColor	                 #c0c0c0
 	BorderColor                  #545454
	FontSize	    	         20
	BorderRoundCorner            16
	BorderThickness 	         1
	BackgroundColor              #48494b
}


skinparam legend {
	BackgroundColor #303030
	BorderColor #404040
	FontColor #a0a0a0
}

	skinparam swimlane {
	BorderColor #5e5e5e
	BorderThickness 2
	TitleBackgroundColor  #6d6d6d-#484848
	TitleFontColor #303030
}

skinparam activity {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BarColor #00FF00
	StartColor #0060a8
	EndColor #0060a8
	DiamondBackgroundColor #6d6d6d-#3a3a3a
  	DiamondBorderColor #3a3a3a
  	DiamondFontColor #fefefe
}


skinparam participant {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	ParticipantBorderThickness 2
}


skinparam actor {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam arrow {
	Thickness 1.5
	Color #545454
	FontColor #a0a0a0
    FontStyle bold
    MessageAlignment center
}



skinparam sequence {
	BorderColor #303030
	TitleFontColor #303030
	BackgroundColor #333333
	StartColor #303030
	EndColor #303030
	BoxBackgroundColor #333333
	BoxBorderColor #484848
	BoxFontColor #484848
	LifeLineBorderColor #484848
	LifeLineBorderThickness 2
	LifeLineBackgroundColor #3a3a3a
	GroupBorderColor #484848
	GroupFontColor #484848
	GroupHeaderFontColor #0060a8
	GroupBackgroundColor #484848
	GroupHeaderBackgroundColor #333333
	DividerBackgroundColor #484848
    DividerBorderColor #484848
    DividerBorderThickness 2
    DividerFontColor #D8Bc00
	ReferenceBackgroundColor #333333
	ReferenceBorderColor #484848
	ReferenceFontColor #fefefe
	ReferenceHeaderBackgroundColor #484848
}


skinparam partition {
	BorderColor #303030
	FontColor #333333
	BackgroundColor #333333
}


skinparam collections {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam control {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam entity {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam boundary {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam agent {
	BackgroundColor #ff8000
	BorderColor #ff9933
	FontColor #484848
}


skinparam note {
	BorderThickness 1
	BackgroundColor #1b1b1a
	BorderColor #5e5e5e
	FontSize 11
	FontColor #a0a0a0
}


skinparam artifact {
	BorderThickness 10
	BorderColor #5e5e5e
	BackgroundColor #1b1b1a
	FontColor #D8Bc00
}


skinparam component {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam interface {
	BackgroundColor  #008400
	BorderColor  #007F00
	FontColor #484848
}


skinparam storage {
	BackgroundColor #ff8000
  	BorderColor #cc6600
	FontColor #222222
}


skinparam node {
	BackgroundColor #333333
	BorderColor #333333
	FontColor #C8Ac00
}


skinparam cloud {
	BackgroundColor #484848-black
	BorderColor #484848
	FontColor #D8Bc00
}


skinparam database {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BackgroundColor  #333333
}


skinparam class {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	HeaderBackgroundColor #1b1b1a
    BackgroundColor #282828
    BorderColor #5e5e5e
 	StereotypeFontColor #a0a0a0
    StereotypeFontStyle bold
	BorderThickness 1
	AttributeFontColor #D8Bc00
	AttributeFontSize 11
    FontColor #D8Bc00
    FontStyle bold
}


skinparam object {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	StereotypeFontColor #484848
	BorderThickness 1
	AttributeFontColor #fefefe
	AttributeFontSize 11
}


skinparam usecase {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BorderThickness 2
	StereotypeFontColor #303030
}


skinparam rectangle {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BackgroundColor #333333
	BorderThickness 2
	StereotypeFontColor #303030
}


skinparam package {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BackgroundColor #333333
	BorderThickness 2
}


skinparam folder {
	BackgroundColor #6d6d6d
  	BorderColor #ff8000
	FontColor #ff8000
	BorderThickness 2
}


skinparam frame {
	BackgroundColor #6d6d6d
  	BorderColor #0060a8
	FontColor #0060a8
	BorderThickness 2
}


skinparam state {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	StartColor #0060a8
	EndColor #0060a8
	AttributeFontColor #fefefe
	AttributeFontSize 11
}


skinparam queue {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam card {
	BackgroundColor #0060a8
	BorderColor #004d86
	FontColor $INFO_TEXT
}


skinparam file {
	BackgroundColor #6d6d6d-#484848
	BorderColor #0060a8
	FontColor #fefefe
}


skinparam stack {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}

    
    title "com.telenav.mesakit.graph.specifications.common.vertex.store"
    
    interface Initializable
    interface NamedObject
    interface Validatable
    interface CompressibleCollection
    interface KryoSerializable
    
    Validatable <|- - ConnectivityStore
    NamedObject <|- - ConnectivityStore
    KryoSerializable <|- - ConnectivityStore
    CompressibleCollection <|- - ConnectivityStore
    Initializable <|- - ConnectivityStore
    class ConnectivityStore
    {
        - -(constructors)- -
        #ConnectivityStore()
        +ConnectivityStore(String, Graph)
        - -
        +void freeTemporaryData()
        +void graph(Graph)
        +EdgeSequence retrieveEdgeSequence(int vertexIndex)
        +EdgeSequence retrieveInEdgeSequence(int vertexIndex)
        +EdgeSet retrieveInEdges(int vertexIndex)
        +EdgeSequence retrieveOutEdgeSequence(int vertexIndex)
        +EdgeSet retrieveOutEdges(int vertexIndex)
        +EdgeSequence retrieveTwoWayEdgeSequence(int vertexIndex)
        +void storeLists(int vertexIndex, IntIterator, IntIterator out, IntIterator twoWay)
        +void storeTemporaryLists(int vertexIndex)
        +void temporaryConnect(Edge, int fromVertexIndex, int toVertexIndex)
        +void temporaryDisconnect(Edge, int fromVertexIndex, int toVertexIndex)
        +boolean temporaryIsConnected(int fromVertexIndex, int toVertexIndex)
        - -(collection)- -
        +int retrieveEdgeCount(int vertexIndex)
        +int retrieveInEdgeCount(int vertexIndex)
        +int retrieveOutEdgeCount(int vertexIndex)
        +int retrieveTwoWayEdgeCount(int vertexIndex)
        +int vertexCount()
    }
    
    CompressibleCollection <|- - EdgeArrayStore
    NamedObject <|- - EdgeArrayStore
    class EdgeArrayStore
    {
        - -(constructors)- -
        #EdgeArrayStore()
        +EdgeArrayStore(String, Metadata)
        - -
        +EdgeSequence edgeSequence(EdgeStore, int index)
        - -(collection)- -
        +IntList list(int index)
        +void list(int index, IntIterator values)
        +int list(List<Edge> edges)
        +int size()
        +int size(int index)
    }
    
    GraphNode <|- - GraphNodeIndex
    class GraphNodeIndex
    {
        - -(constructors)- -
        +GraphNodeIndex(int)
    }
    
    enum ConnectivityStore.Sequence
    {
        ALL
        IN
        OUT
        TWO_WAY
    }
    
    NodeStore <|- - VertexStore
    class VertexStore
    {
        - -(constructors)- -
        +VertexStore(Graph)
        - -
        +void clipped(Vertex)
        +void clipped(Location)
        +void freeTemporaryData()
        +void gradeSeparate(Vertex originalVertex, GradeSeparation, EdgeSet edgesAtGrade)
        +void gradeSeparatePerturbVertexLocation(Vertex, Vertex originalVertex, GradeSeparation, EdgeSet edgesAtGrade)
        +void gradeSeparateUpdateGradeSeparatedEdgeVertexes(HeavyWeightVertex newVertex, Vertex originalVertex, EdgeSet edgesAtGrade)
        +boolean internalIsConnected(MapNodeIdentifier from, MapNodeIdentifier to)
        +GraphNode node(Location)
        +EdgeSequence retrieveEdgeSequence(Vertex)
        +GradeSeparation retrieveGradeSeparation(Vertex)
        +EdgeSequence retrieveInEdgeSequence(Vertex)
        +EdgeSet retrieveInEdges(Vertex)
        +boolean retrieveIsClipped(Vertex)
        +EdgeSequence retrieveOutEdgeSequence(Vertex)
        +EdgeSet retrieveOutEdges(Vertex)
        +void storeAttributes(Vertex)
        +void storeGradeSeparation(Vertex, GradeSeparation)
        +boolean supportsAllNodeTags()
        +VertexSequence vertexesInside(Rectangle bounds, Matcher<Vertex>)
        #ConnectivityStore connectivity()
        - -(collection)- -
        +void addVertexes()
        +boolean contains(Vertex)
        +boolean contains(VertexIdentifier)
        +boolean contains(MapIdentifier)
        +Count retrieveEdgeCount(Vertex)
        +Count retrieveInEdgeCount(Vertex)
        +Count retrieveOutEdgeCount(Vertex)
        +void temporaryAddVertexes(Edge)
        +void temporaryRemove(Edge)
        - -(factory)- -
        +void gradeSeparateConnectEdgesToNewVertex(Vertex newVertex, Vertex originalVertex, EdgeSet edgesAtGrade)
        - -(identity)- -
        +Vertex vertexForNodeIdentifier(long nodeIdentifier)
        - -(read)- -
        +void loadVertexTags(PbfDataSource, PbfTagFilter)
    }
    
@enduml

PlantUML version 1.2021.01(Tue Feb 02 00:55:08 MST 2021)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Default Encoding: UTF-8
Language: en
Country: US
--></g></svg>