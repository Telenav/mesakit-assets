
@startuml

    !include lexakai.theme
    
    title "com.telenav.mesakit.map.geography.indexing.polygon"
    
    interface Bounded
    interface Outline
    interface Intersectable
    
    Quadrant <|-- Leaf
    class Leaf
    {
        --(constructors)--
        +Leaf(Segment, Segment, Location)
        --
        +Segment a()
        +Segment b()
        +Location inside()
    }
    
    class LocationArray
    {
        --(constructors)--
        #LocationArray()
        +LocationArray(String, Estimate)
        --
        +Location get(int index)
        +void set(int index, Location)
    }
    
    Quadrant <|-- Node
    class Node
    {
        --(constructors)--
        +Node(PolygonSpatialIndex, int, int, int, int)
        +Node(PolygonSpatialIndex, Rectangle)
        --(collection)--
        +int northEastIndex()
        +int northWestIndex()
        +int southEastIndex()
        +int southWestIndex()
    }
    
    Intersectable <|-- PolygonSpatialIndex
    Bounded <|-- PolygonSpatialIndex
    Outline <|-- PolygonSpatialIndex
    class PolygonSpatialIndex
    {
        --(constructors)--
        #PolygonSpatialIndex()
        +PolygonSpatialIndex(Polygon)
        --
        +void debug(PolygonSpatialIndexDebugger)
        +void visit(Visitor)
    }
    
    interface PolygonSpatialIndexDebugger
    {
        --
        +void leaf(Rectangle bounds, Segment a, Segment b, Location inside)
        +void quadrant(Rectangle)
    }
    
    abstract class Quadrant
    {
        --
        +void debug(PolygonSpatialIndexDebugger, Rectangle bounds)
        #void visit(Visitor, Rectangle bounds)
        --(collection)--
        +Containment contains(Location, Rectangle bounds)
    }
    
    class QuadrantStore
    {
        --(constructors)--
        #QuadrantStore()
        +QuadrantStore(PolygonSpatialIndex)
        --(collection)--
        +int add(Node)
    }
    
    interface PolygonSpatialIndex.Visitor
    {
        --
        +void onLeaf(Rectangle bounds, Segment a, Segment b, Location inside)
    }
    
@enduml

