
@startuml

    !include lexakai.theme
    
    title "com.telenav.mesakit.graph.metadata"
    
    abstract BaseStringConverter
    
    interface NamedObject
    
    BaseStringConverter <|-- DataBuild.Converter
    class DataBuild.Converter
    {
        --(constructors)--
        +Converter(Listener)
    }
    
    BaseStringConverter <|-- DataVersion.Converter
    class DataVersion.Converter
    {
        --(constructors)--
        +Converter(Listener)
    }
    
    BaseStringConverter <|-- DataSpecification.Converter
    class DataSpecification.Converter
    {
        --(constructors)--
        +Converter(Listener)
    }
    
    class DataBuild
    {
        --(constructors)--
        +DataBuild()
        +DataBuild(DataBuild)
        +DataBuild(LocalTime)
        --(building)--
        +DataBuild at(LocalTime)
        +DataBuild now()
        +DataBuild parse(String)
        +DataBuild withDay(Day)
        +DataBuild withHour(Hour)
        +DataBuild withMinute(Minute)
        +DataBuild withMonth(Month)
        +DataBuild withTimeZone(ZoneId)
        +DataBuild withYear(Year)
        --(filesystem)--
        +FileName asFileName()
        --(time)--
        +LocalTime localTime()
        +LocalTime utcTime()
    }
    
    NamedObject <|-- DataSpecification
    abstract class DataSpecification
    {
        --(constructors)--
        #DataSpecification()
        --
        +Differences compare(Place, Place b)
        +Differences compare(Edge a, Edge b)
        +EdgeAttributes edgeAttributes()
        +EdgeProperties edgeProperties()
        +boolean owns(Class<? extends AttributeStore> owner, Attribute<?>)
        +PlaceAttributes placeAttributes()
        +PlaceProperties placeProperties()
        +RelationAttributes relationAttributes()
        +RelationProperties relationProperties()
        +GraphElementPropertySet<ShapePoint> shapePointProperties()
        +void supportedAttributes(IntArray supportedAttributes)
        +boolean supports(Attribute<?>)
        +Type type()
        +VertexAttributes vertexAttributes()
        +VertexProperties vertexProperties()
        #void showAttributes()
        --(checks)--
        +boolean isOsm()
        +boolean isUniDb()
        --(collection)--
        +AttributeList attributes()
        +AttributeList attributes(Class<? extends AttributeStore>)
        +IntArray supportedAttributes()
        --(factory)--
        +Edge newEdge(Graph, long identifier, int index)
        +Edge newEdge(Graph, long identifier)
        +EdgeStore newEdgeStore(Graph)
        +Graph newGraph(Metadata)
        +GraphConverter newGraphConverter(Metadata)
        +GraphLoader newGraphLoader(Metadata)
        +GraphStore newGraphStore(Graph)
        +HeavyWeightEdge newHeavyWeightEdge(Graph, long identifier)
        +HeavyWeightPlace newHeavyWeightPlace(Graph, long identifier)
        +HeavyWeightRelation newHeavyWeightRelation(Graph, long identifier)
        +HeavyWeightVertex newHeavyWeightVertex(Graph, long identifier)
        +Place newPlace(Graph, long identifier)
        +PlaceStore newPlaceStore(Graph)
        +EdgeRelation newRelation(Graph, long identifier)
        +RelationStore newRelationStore(Graph)
        +ShapePoint newShapePoint(Graph, long identifier)
        +ShapePointStore newShapePointStore(Graph)
        +Vertex newVertex(Graph, long identifier)
        +VertexStore newVertexStore(Graph)
        #Edge onNewEdge(Graph, long identifier, int index)
        #Edge onNewEdge(Graph, long identifier)
        #Graph onNewGraph(Metadata)
        #GraphConverter onNewGraphConverter(Metadata)
        #GraphLoader onNewGraphLoader(Metadata)
        #HeavyWeightEdge onNewHeavyWeightEdge(Graph, long identifier)
        #HeavyWeightPlace onNewHeavyWeightPlace(Graph, long identifier)
        #HeavyWeightRelation onNewHeavyWeightRelation(Graph, long identifier)
        #HeavyWeightVertex onNewHeavyWeightVertex(Graph, long identifier)
        #Place onNewPlace(Graph, long identifier)
        #EdgeRelation onNewRelation(Graph, long identifier)
        #ShapePoint onNewShapePoint(Graph, long identifier)
        #Vertex onNewVertex(Graph, long identifier)
        --(filtering)--
        +void excludeAttribute(Attribute<?>)
        #void includeAttribute(Class<? extends AttributeStore> owner, Attribute<?>)
        #void includeAttributes(Class<? extends AttributeStore> owner, AttributeList attributes)
        --(parsing)--
        +SwitchParser.Builder<DataSpecification> dataSpecificationSwitchParser(String name, String description)
        +SwitchParser.Builder<DataSpecification> dataSpecificationSwitchParser()
        +DataSpecification parse(String name)
    }
    
    enum DataSupplier
    {
        ALL
        HERE
        OSM
        Telenav
        TomTom
    }
    
    class DataVersion
    {
        --(constructors)--
        +DataVersion()
        +DataVersion(DataVersion)
        +DataVersion(LocalTime)
        --(checks)--
        +boolean isValid()
        --(identity)--
        +SwitchParser.Builder<DataVersion> dataVersionSwitchParser(String name, String description)
        +SwitchParser.Builder<DataVersion> dataVersionSwitchParser()
        +DataVersion parse(String)
        +DataVersion withQuarter(Quarter)
        +DataVersion withYear(Year)
    }
    
    interface DataSpecification.GraphElementFactory<T>
    {
        --(factory)--
        +T newElement(Graph, long identifier)
    }
    
    enum DataSpecification.Type
    {
        Common
        OSM
        UniDb
    }
    
@enduml

