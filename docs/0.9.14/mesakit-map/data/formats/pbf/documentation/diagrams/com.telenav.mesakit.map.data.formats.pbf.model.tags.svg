<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="1021.875px" preserveAspectRatio="none" style="width:1543px;height:1021px;background:#333333;" version="1.1" viewBox="0 0 1543 1021" width="1543.75px" zoomAndPan="magnify"><defs/><g><rect fill="#48494B" height="41.2028" rx="8.3333" ry="8.3333" style="stroke:#545454;stroke-width:1.0416666666666667;" width="570.8333" x="479.1667" y="2.0833"/><text fill="#C0C0C0" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="20.8333" lengthAdjust="spacing" textLength="547.9167" x="490.625" y="30.5583">com.telenav.mesakit.map.data.formats.pbf.model.tags</text><!--MD5=[dce3aa0f8d452f3127b61eeee409dd72]
cluster PbfTagPatternFilter--><polygon fill="#333333" points="17.7083,349.5361,154.1667,349.5361,161.4583,376.7578,229.1667,376.7578,229.1667,506.8278,17.7083,506.8278,17.7083,349.5361" style="stroke:#333333;stroke-width:2.0833333333333335;"/><line style="stroke:#333333;stroke-width:2.0833333333333335;" x1="17.7083" x2="161.4583" y1="376.7578" y2="376.7578"/><text fill="#C8AC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="123.9583" x="25" y="366.8294">PbfTagPatternFilter</text><!--MD5=[1acbd48952e73271f2db6342f37c12b7]
class PbfTagPatternFilter.Converter--><rect codeLine="13" fill="#282828" height="83.3781" id="PbfTagPatternFilter.Converter" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="141.6667" x="62.5" y="398.4945"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="141.6667" x="62.5" y="398.4945"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="141.6667" x="62.5" y="421.5495"/><rect codeLine="13" fill="none" height="83.3781" id="PbfTagPatternFilter.Converter" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="141.6667" x="62.5" y="398.4945"/><ellipse cx="95.3646" cy="414.1886" fill="#0066CF" rx="10.4167" ry="10.4167" style="stroke:#0086EF;stroke-width:1.0416666666666667;"/><path d="M97.275,418.6137 Q96.8477,418.8334 96.3778,418.9433 Q95.9078,419.0531 95.389,419.0531 Q93.5457,419.0531 92.5753,417.8385 Q91.6048,416.6239 91.6048,414.329 Q91.6048,412.028 92.5753,410.8134 Q93.5457,409.5988 95.389,409.5988 Q95.9078,409.5988 96.3839,409.7087 Q96.8599,409.8185 97.275,410.0382 L97.275,412.0402 Q96.8111,411.613 96.3747,411.4146 Q95.9383,411.2162 95.4744,411.2162 Q94.4857,411.2162 93.9821,412.0005 Q93.4786,412.7848 93.4786,414.329 Q93.4786,415.8671 93.9821,416.6514 Q94.4857,417.4357 95.4744,417.4357 Q95.9383,417.4357 96.3747,417.2373 Q96.8111,417.039 97.275,416.6117 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="63.5417" x="116.0938" y="418.9128">Converter</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="63.5417" x2="203.125" y1="429.8828" y2="429.8828"/><ellipse cx="73.9583" cy="465.2527" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="109.375" x="85.4167" y="472.1639">Converter(Listener)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="63.5417" x2="89.5833" y1="448.0886" y2="448.0886"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="81.25" x="92.7083" y="451.8982">(constructors)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="177.0833" x2="203.125" y1="448.0886" y2="448.0886"/><!--MD5=[9aa687ed59f428548907e723dba1087a]
class BaseStringConverter--><rect codeLine="7" fill="#282828" height="48.055" id="BaseStringConverter" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="169.7917" x="48.4375" y="53.7028"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="169.7917" x="48.4375" y="53.7028"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="169.7917" x="48.4375" y="76.7578"/><rect codeLine="7" fill="none" height="48.055" id="BaseStringConverter" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="169.7917" x="48.4375" y="53.7028"/><ellipse cx="63.0208" cy="69.397" fill="#C8AC00" rx="10.4167" ry="10.4167" style="stroke:#D8BC00;stroke-width:1.0416666666666667;"/><path d="M62.6139,66.099 L61.7655,69.8283 L63.4684,69.8283 Z M61.5153,64.4511 L63.7187,64.4511 L66.1784,73.5636 L64.3778,73.5636 L63.8163,71.3114 L61.4054,71.3114 L60.8561,73.5636 L59.0556,73.5636 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="132.2917" x="79.6875" y="74.1211">BaseStringConverter</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="49.4792" x2="217.1875" y1="85.0911" y2="85.0911"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="49.4792" x2="217.1875" y1="93.4245" y2="93.4245"/><!--MD5=[d79730e212aaab83526b3c982ee56b6e]
class PbfTagFilter--><rect codeLine="27" fill="#282828" height="83.3781" id="PbfTagFilter" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="152.0833" x="254.1667" y="398.4945"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="152.0833" x="254.1667" y="398.4945"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="152.0833" x="254.1667" y="421.5495"/><rect codeLine="27" fill="none" height="83.3781" id="PbfTagFilter" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="152.0833" x="254.1667" y="398.4945"/><ellipse cx="285.1563" cy="414.1886" fill="#008400" rx="10.4167" ry="10.4167" style="stroke:#239C23;stroke-width:1.0416666666666667;"/><path d="M282.5602,411.3505 L282.5602,409.7636 L287.9862,409.7636 L287.9862,411.3505 L286.1735,411.3505 L286.1735,417.2892 L287.9862,417.2892 L287.9862,418.8761 L282.5602,418.8761 L282.5602,417.2892 L284.373,417.2892 L284.373,411.3505 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="78.125" x="305.4688" y="418.9128">PbfTagFilter</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="255.2083" x2="405.2083" y1="429.8828" y2="429.8828"/><ellipse cx="265.625" cy="465.2527" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="119.7917" x="277.0833" y="472.1639">boolean accepts(Tag)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="255.2083" x2="301.0417" y1="448.0886" y2="448.0886"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="52.0833" x="304.1667" y="451.8982">(filtering)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="359.375" x2="405.2083" y1="448.0886" y2="448.0886"/><!--MD5=[a73d0c2ecfbfe908f655a2bb439c5095]
class Keyed--><rect codeLine="10" fill="#282828" height="48.055" id="Keyed" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="77.0833" x="597.9167" y="53.7028"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="77.0833" x="597.9167" y="53.7028"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="77.0833" x="597.9167" y="76.7578"/><rect codeLine="10" fill="none" height="48.055" id="Keyed" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="77.0833" x="597.9167" y="53.7028"/><ellipse cx="612.5" cy="69.397" fill="#008400" rx="10.4167" ry="10.4167" style="stroke:#239C23;stroke-width:1.0416666666666667;"/><path d="M609.904,66.5588 L609.904,64.9719 L615.33,64.9719 L615.33,66.5588 L613.5173,66.5588 L613.5173,72.4976 L615.33,72.4976 L615.33,74.0845 L609.904,74.0845 L609.904,72.4976 L611.7167,72.4976 L611.7167,66.5588 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="39.5833" x="629.1667" y="74.1211">Keyed</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="598.9583" x2="673.9583" y1="85.0911" y2="85.0911"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="598.9583" x2="673.9583" y1="93.4245" y2="93.4245"/><!--MD5=[19c5389150046187c3588e0fe3bbc0c4]
class PbfTagMap--><rect codeLine="66" fill="#282828" height="494.9422" id="PbfTagMap" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="328.125" x="472.3958" y="192.7653"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="328.125" x="472.3958" y="192.7653"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="328.125" x="472.3958" y="215.8203"/><rect codeLine="66" fill="none" height="494.9422" id="PbfTagMap" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="328.125" x="472.3958" y="192.7653"/><ellipse cx="593.2292" cy="208.4595" fill="#0066CF" rx="10.4167" ry="10.4167" style="stroke:#0086EF;stroke-width:1.0416666666666667;"/><path d="M595.1396,212.8845 Q594.7123,213.1042 594.2424,213.2141 Q593.7724,213.324 593.2536,213.324 Q591.4103,213.324 590.4399,212.1094 Q589.4694,210.8948 589.4694,208.5999 Q589.4694,206.2988 590.4399,205.0842 Q591.4103,203.8696 593.2536,203.8696 Q593.7724,203.8696 594.2485,203.9795 Q594.7245,204.0894 595.1396,204.3091 L595.1396,206.311 Q594.6757,205.8838 594.2393,205.6854 Q593.8029,205.4871 593.339,205.4871 Q592.3503,205.4871 591.8467,206.2714 Q591.3432,207.0557 591.3432,208.5999 Q591.3432,210.1379 591.8467,210.9222 Q592.3503,211.7065 593.339,211.7065 Q593.8029,211.7065 594.2393,211.5082 Q594.6757,211.3098 595.1396,210.8826 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="71.875" x="616.1458" y="213.1836">PbfTagMap</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="473.4375" x2="799.4792" y1="224.1536" y2="224.1536"/><polygon fill="#FFFF44" points="483.8542,254.3152,488.0208,258.4819,483.8542,262.6485,479.6875,258.4819" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="84.375" x="495.3125" y="266.4347">PbfTagMap(int)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="473.4375" x2="592.7083" y1="242.3594" y2="242.3594"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="81.25" x="595.8333" y="246.169">(constructors)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="680.2083" x2="799.4792" y1="242.3594" y2="242.3594"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="473.4375" x2="799.4792" y1="276.1434" y2="276.1434"/><ellipse cx="483.8542" cy="287.6017" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="229.1667" x="495.3125" y="294.5129">String get(String key, String defaultValue)</text><ellipse cx="483.8542" cy="307.3466" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="105.2083" x="495.3125" y="314.2578">Tag tag(String key)</text><ellipse cx="483.8542" cy="327.0915" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="210.4167" x="495.3125" y="334.0027">int valueAsNaturalNumber(String key)</text><ellipse cx="483.8542" cy="346.8363" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="165.625" x="495.3125" y="353.7476">boolean valueIsNo(String key)</text><ellipse cx="483.8542" cy="366.5812" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="169.7917" x="495.3125" y="373.4924">boolean valueIsYes(String key)</text><ellipse cx="483.8542" cy="410.2376" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="179.1667" x="495.3125" y="417.1488">boolean containsKey(String key)</text><ellipse cx="483.8542" cy="429.9825" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="107.2917" x="495.3125" y="436.8937">PbfTagMap create()</text><ellipse cx="483.8542" cy="449.7274" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="222.9167" x="495.3125" y="456.6386">PbfTagMap from(Collection&lt;Tag&gt; tags)</text><ellipse cx="483.8542" cy="469.4722" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="295.8333" x="495.3125" y="476.3835">PbfTagMap from(Collection&lt;Tag&gt; tags, PbfTagFilter)</text><ellipse cx="483.8542" cy="489.2171" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="100" x="495.3125" y="496.1283">boolean isEmpty()</text><ellipse cx="483.8542" cy="508.962" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="130.2083" x="495.3125" y="515.8732">Iterator&lt;String&gt; keys()</text><ellipse cx="483.8542" cy="528.7069" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="181.25" x="495.3125" y="535.6181">void put(String key, String value)</text><ellipse cx="483.8542" cy="548.4517" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="177.0833" x="495.3125" y="555.363">void putAll(Iterable&lt;Tag&gt; tags)</text><ellipse cx="483.8542" cy="568.1966" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="47.9167" x="495.3125" y="575.1078">int size()</text><ellipse cx="483.8542" cy="587.9415" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="129.1667" x="495.3125" y="594.8527">String value(String key)</text><ellipse cx="483.8542" cy="607.6864" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="172.9167" x="495.3125" y="614.5976">StringList valueSplit(String key)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="473.4375" x2="602.0833" y1="393.0735" y2="393.0735"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="62.5" x="605.2083" y="396.8831">(collection)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="670.8333" x2="799.4792" y1="393.0735" y2="393.0735"/><ellipse cx="483.8542" cy="651.3428" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="139.5833" x="495.3125" y="658.254">int valueAsInt(String key)</text><ellipse cx="483.8542" cy="671.0876" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="163.5417" x="495.3125" y="677.9989">long valueAsLong(String key)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="473.4375" x2="604.6875" y1="634.1787" y2="634.1787"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="57.2917" x="607.8125" y="637.9883">(primitive)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="668.2292" x2="799.4792" y1="634.1787" y2="634.1787"/><!--MD5=[d78db216e393aee26594d0bbb4b8a4c2]
class EmptyPbfTagMap--><rect codeLine="20" fill="#282828" height="83.3781" id="EmptyPbfTagMap" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="150" x="614.5833" y="866.2028"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="150" x="614.5833" y="866.2028"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="150" x="614.5833" y="889.2578"/><rect codeLine="20" fill="none" height="83.3781" id="EmptyPbfTagMap" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="150" x="614.5833" y="866.2028"/><ellipse cx="629.1667" cy="881.897" fill="#0066CF" rx="10.4167" ry="10.4167" style="stroke:#0086EF;stroke-width:1.0416666666666667;"/><path d="M631.0771,886.322 Q630.6498,886.5417 630.1799,886.6516 Q629.7099,886.7615 629.1911,886.7615 Q627.3478,886.7615 626.3774,885.5469 Q625.4069,884.3323 625.4069,882.0374 Q625.4069,879.7363 626.3774,878.5217 Q627.3478,877.3071 629.1911,877.3071 Q629.7099,877.3071 630.186,877.417 Q630.662,877.5269 631.0771,877.7466 L631.0771,879.7485 Q630.6132,879.3213 630.1768,879.1229 Q629.7404,878.9246 629.2765,878.9246 Q628.2878,878.9246 627.7842,879.7089 Q627.2807,880.4932 627.2807,882.0374 Q627.2807,883.5754 627.7842,884.3597 Q628.2878,885.144 629.2765,885.144 Q629.7404,885.144 630.1768,884.9457 Q630.6132,884.7473 631.0771,884.3201 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="112.5" x="645.8333" y="886.6211">EmptyPbfTagMap</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="615.625" x2="763.5417" y1="897.5911" y2="897.5911"/><polygon fill="#FFFF44" points="626.0417,927.7527,630.2083,931.9194,626.0417,936.086,621.875,931.9194" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="104.1667" x="637.5" y="939.8722">EmptyPbfTagMap()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="615.625" x2="645.8333" y1="915.7969" y2="915.7969"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="81.25" x="648.9583" y="919.6065">(constructors)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="733.3333" x2="763.5417" y1="915.7969" y2="915.7969"/><!--MD5=[39d6d2ea03de602dbf4d534e70c872a9]
class Tag--><rect fill="#282828" height="48.055" id="Tag" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="61.4583" x="885.9375" y="883.9111"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="61.4583" x="885.9375" y="883.9111"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="61.4583" x="885.9375" y="906.9661"/><rect fill="none" height="48.055" id="Tag" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="61.4583" x="885.9375" y="883.9111"/><ellipse cx="900.5208" cy="899.6053" fill="#0066CF" rx="10.4167" ry="10.4167" style="stroke:#0086EF;stroke-width:1.0416666666666667;"/><path d="M902.4312,904.0304 Q902.004,904.2501 901.534,904.3599 Q901.064,904.4698 900.5452,904.4698 Q898.702,904.4698 897.7315,903.2552 Q896.7611,902.0406 896.7611,899.7457 Q896.7611,897.4447 897.7315,896.2301 Q898.702,895.0155 900.5452,895.0155 Q901.064,895.0155 901.5401,895.1253 Q902.0162,895.2352 902.4312,895.4549 L902.4312,897.4569 Q901.9674,897.0296 901.531,896.8313 Q901.0946,896.6329 900.6307,896.6329 Q899.6419,896.6329 899.1384,897.4172 Q898.6348,898.2015 898.6348,899.7457 Q898.6348,901.2838 899.1384,902.0681 Q899.6419,902.8524 900.6307,902.8524 Q901.0946,902.8524 901.531,902.654 Q901.9674,902.4556 902.4312,902.0284 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="23.9583" x="917.1875" y="904.3294">Tag</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="886.9792" x2="946.3542" y1="915.2995" y2="915.2995"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="886.9792" x2="946.3542" y1="923.6328" y2="923.6328"/><!--MD5=[56a5e24547e9848fa048dca0457945be]
class PbfTagList--><rect codeLine="34" fill="#282828" height="550.0102" id="PbfTagList" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="325" x="837.5" y="165.1611"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="325" x="837.5" y="165.1611"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="325" x="837.5" y="188.2161"/><rect codeLine="34" fill="none" height="550.0102" id="PbfTagList" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="325" x="837.5" y="165.1611"/><ellipse cx="958.3333" cy="180.8553" fill="#0066CF" rx="10.4167" ry="10.4167" style="stroke:#0086EF;stroke-width:1.0416666666666667;"/><path d="M960.2437,185.2804 Q959.8165,185.5001 959.3465,185.6099 Q958.8765,185.7198 958.3577,185.7198 Q956.5145,185.7198 955.544,184.5052 Q954.5736,183.2906 954.5736,180.9957 Q954.5736,178.6947 955.544,177.4801 Q956.5145,176.2655 958.3577,176.2655 Q958.8765,176.2655 959.3526,176.3753 Q959.8287,176.4852 960.2437,176.7049 L960.2437,178.7069 Q959.7799,178.2796 959.3435,178.0813 Q958.9071,177.8829 958.4432,177.8829 Q957.4544,177.8829 956.9509,178.6672 Q956.4473,179.4515 956.4473,180.9957 Q956.4473,182.5338 956.9509,183.3181 Q957.4544,184.1024 958.4432,184.1024 Q958.9071,184.1024 959.3435,183.904 Q959.7799,183.7056 960.2437,183.2784 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="68.75" x="981.25" y="185.5794">PbfTagList</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="838.5417" x2="1161.4583" y1="196.5495" y2="196.5495"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="838.5417" x2="1161.4583" y1="204.8828" y2="204.8828"/><ellipse cx="848.9583" cy="216.3411" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="105.2083" x="860.4167" y="223.2524">Tag get(String key)</text><ellipse cx="848.9583" cy="236.086" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="98.9583" x="860.4167" y="242.9972">Tag get(int index)</text><ellipse cx="848.9583" cy="255.8309" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="190.625" x="860.4167" y="262.7421">void retainOnly(Set&lt;String&gt; keys)</text><ellipse cx="848.9583" cy="299.4873" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="92.7083" x="860.4167" y="306.3985">boolean isValid()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="838.5417" x2="973.4375" y1="282.3232" y2="282.3232"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="46.875" x="976.5625" y="286.1328">(checks)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1026.5625" x2="1161.4583" y1="282.3232" y2="282.3232"/><ellipse cx="848.9583" cy="343.1437" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="111.4583" x="860.4167" y="350.0549">PbfTagList add(Tag)</text><ellipse cx="848.9583" cy="362.8886" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="217.7083" x="860.4167" y="369.7998">PbfTagList add(String key, String value)</text><ellipse cx="848.9583" cy="382.6335" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="213.5417" x="860.4167" y="389.5447">PbfTagList addAll(Iterable&lt;Tag&gt; tags)</text><ellipse cx="848.9583" cy="402.3783" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="103.125" x="860.4167" y="409.2896">List&lt;Tag&gt; asList()</text><ellipse cx="848.9583" cy="422.1232" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="179.1667" x="860.4167" y="429.0344">boolean containsKey(String key)</text><ellipse cx="848.9583" cy="441.8681" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="96.875" x="860.4167" y="448.7793">PbfTagList copy()</text><ellipse cx="848.9583" cy="461.613" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="104.1667" x="860.4167" y="468.5242">PbfTagList create()</text><ellipse cx="848.9583" cy="481.3578" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="219.7917" x="860.4167" y="488.269">PbfTagList from(Collection&lt;Tag&gt; tags)</text><ellipse cx="848.9583" cy="501.1027" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="292.7083" x="860.4167" y="508.0139">PbfTagList from(Collection&lt;Tag&gt; tags, PbfTagFilter)</text><ellipse cx="848.9583" cy="520.8476" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="100" x="860.4167" y="527.7588">boolean isEmpty()</text><ellipse cx="848.9583" cy="540.5924" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="196.875" x="860.4167" y="547.5037">PbfTagList matchingKey(String key)</text><ellipse cx="848.9583" cy="560.3373" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="102.0833" x="860.4167" y="567.2485">PbfTagList of(Tag)</text><ellipse cx="848.9583" cy="580.0822" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="152.0833" x="860.4167" y="586.9934">void removeKey(String key)</text><ellipse cx="848.9583" cy="599.8271" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="268.75" x="860.4167" y="606.7383">PbfTagList set(int index, String key, String value)</text><ellipse cx="848.9583" cy="619.5719" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="47.9167" x="860.4167" y="626.4832">int size()</text><ellipse cx="848.9583" cy="639.3168" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="106.25" x="860.4167" y="646.228">PbfTagList sorted()</text><ellipse cx="848.9583" cy="659.0617" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="167.7083" x="860.4167" y="665.9729">String valueForKey(String key)</text><ellipse cx="848.9583" cy="678.8066" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="279.1667" x="860.4167" y="685.7178">String valueForKey(String key, String defaultValue)</text><ellipse cx="848.9583" cy="698.5514" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="186.4583" x="860.4167" y="705.4626">PbfTagList withoutKey(String key)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="838.5417" x2="965.625" y1="325.9796" y2="325.9796"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="62.5" x="968.75" y="329.7892">(collection)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1034.375" x2="1161.4583" y1="325.9796" y2="325.9796"/><!--MD5=[92c7f35f41c1a9021289ca75e2accaf4]
class PbfTagPatternFilter--><rect codeLine="94" fill="#282828" height="214.3473" id="PbfTagPatternFilter" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="570.8333" x="7.2917" y="800.5778"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="570.8333" x="7.2917" y="800.5778"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="570.8333" x="7.2917" y="823.6328"/><rect codeLine="94" fill="none" height="214.3473" id="PbfTagPatternFilter" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="570.8333" x="7.2917" y="800.5778"/><ellipse cx="223.4375" cy="816.272" fill="#0066CF" rx="10.4167" ry="10.4167" style="stroke:#0086EF;stroke-width:1.0416666666666667;"/><path d="M225.3479,820.697 Q224.9207,820.9167 224.4507,821.0266 Q223.9807,821.1365 223.4619,821.1365 Q221.6187,821.1365 220.6482,819.9219 Q219.6777,818.7073 219.6777,816.4124 Q219.6777,814.1113 220.6482,812.8967 Q221.6187,811.6821 223.4619,811.6821 Q223.9807,811.6821 224.4568,811.792 Q224.9329,811.9019 225.3479,812.1216 L225.3479,814.1235 Q224.884,813.6963 224.4476,813.4979 Q224.0112,813.2996 223.5474,813.2996 Q222.5586,813.2996 222.0551,814.0839 Q221.5515,814.8682 221.5515,816.4124 Q221.5515,817.9504 222.0551,818.7347 Q222.5586,819.519 223.5474,819.519 Q224.0112,819.519 224.4476,819.3207 Q224.884,819.1223 225.3479,818.6951 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="123.9583" x="246.3542" y="820.9961">PbfTagPatternFilter</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="8.3333" x2="577.0833" y1="831.9661" y2="831.9661"/><ellipse cx="18.75" cy="867.336" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="147.9167" x="30.2083" y="874.2472">PbfTagPatternFilter(String)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="8.3333" x2="248.9583" y1="850.1719" y2="850.1719"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="81.25" x="252.0833" y="853.9815">(constructors)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="336.4583" x2="577.0833" y1="850.1719" y2="850.1719"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="8.3333" x2="577.0833" y1="883.9559" y2="883.9559"/><ellipse cx="18.75" cy="895.4142" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="161.4583" x="30.2083" y="902.3254">Set&lt;String&gt; allFilteredTags()</text><ellipse cx="18.75" cy="915.1591" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="152.0833" x="30.2083" y="922.0703">Set&lt;String&gt; rejectedTags()</text><ellipse cx="18.75" cy="958.8155" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="251.0417" x="30.2083" y="965.7267">PbfTagPatternFilter forPattern(String pattern)</text><ellipse cx="18.75" cy="978.5604" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="538.5417" x="30.2083" y="985.4716">SwitchParser.Builder&lt;PbfTagPatternFilter&gt; tagFilterSwitchParser(String name, String description)</text><ellipse cx="18.75" cy="998.3053" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="365.625" x="30.2083" y="1005.2165">SwitchParser.Builder&lt;PbfTagPatternFilter&gt; tagFilterSwitchParser()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="8.3333" x2="263.5417" y1="941.6514" y2="941.6514"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="52.0833" x="266.6667" y="945.461">(filtering)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="321.875" x2="577.0833" y1="941.6514" y2="941.6514"/><!--MD5=[b1e210ffc7c989b1f4aba02912a48aa9]
class PbfTags--><rect codeLine="108" fill="#282828" height="146.7794" id="PbfTags" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="337.5" x="1198.9583" y="366.7236"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="337.5" x="1198.9583" y="366.7236"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="337.5" x="1198.9583" y="389.7786"/><rect codeLine="108" fill="none" height="146.7794" id="PbfTags" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="337.5" x="1198.9583" y="366.7236"/><ellipse cx="1334.375" cy="382.4178" fill="#0066CF" rx="10.4167" ry="10.4167" style="stroke:#0086EF;stroke-width:1.0416666666666667;"/><path d="M1336.2854,386.8429 Q1335.8582,387.0626 1335.3882,387.1724 Q1334.9182,387.2823 1334.3994,387.2823 Q1332.5562,387.2823 1331.5857,386.0677 Q1330.6152,384.8531 1330.6152,382.5582 Q1330.6152,380.2572 1331.5857,379.0426 Q1332.5562,377.828 1334.3994,377.828 Q1334.9182,377.828 1335.3943,377.9378 Q1335.8704,378.0477 1336.2854,378.2674 L1336.2854,380.2694 Q1335.8215,379.8421 1335.3851,379.6438 Q1334.9487,379.4454 1334.4849,379.4454 Q1333.4961,379.4454 1332.9926,380.2297 Q1332.489,381.014 1332.489,382.5582 Q1332.489,384.0963 1332.9926,384.8806 Q1333.4961,385.6649 1334.4849,385.6649 Q1334.9487,385.6649 1335.3851,385.4665 Q1335.8215,385.2681 1336.2854,384.8409 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="52.0833" x="1357.2917" y="387.1419">PbfTags</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="1200" x2="1535.4167" y1="398.112" y2="398.112"/><ellipse cx="1210.4167" cy="433.4819" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="305.2083" x="1221.875" y="440.3931">PropertyMap tags(String prefix, Collection&lt;Tag&gt; tags)</text><ellipse cx="1210.4167" cy="453.2267" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="303.125" x="1221.875" y="460.1379">List&lt;Tag&gt; tags(String prefix, PropertyMap properties)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1200" x2="1333.3333" y1="416.3177" y2="416.3177"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="62.5" x="1336.4583" y="420.1274">(collection)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1402.0833" x2="1535.4167" y1="416.3177" y2="416.3177"/><ellipse cx="1210.4167" cy="496.8831" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="96.875" x="1221.875" y="503.7944">Tag parse(String)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1200" x2="1339.0625" y1="479.719" y2="479.719"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="51.0417" x="1342.1875" y="483.5286">(parsing)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1396.3542" x2="1535.4167" y1="479.719" y2="479.719"/><!--MD5=[02c4f55c2c4a491172c929741a457a6e]
reverse link BaseStringConverter to PbfTagPatternFilter.Converter--><path codeLine="12" d="M133.3333,122.9736 C133.3333,193.5049 133.3333,330.3278 133.3333,398.484 " fill="none" id="BaseStringConverter-backto-PbfTagPatternFilter.Converter" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="126.0417,122.6299,133.3333,101.7965,140.625,122.6299,126.0417,122.6299" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[cc942af7ae38b17b678e2ecccc557737]
reverse link PbfTagMap to EmptyPbfTagMap--><path codeLine="19" d="M666.9792,708.7132 C674.0313,770.5049 680.6979,828.9736 684.9375,866.1507 " fill="none" id="PbfTagMap-backto-EmptyPbfTagMap" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="659.6979,709.1715,664.5729,687.6507,674.1875,707.5257,659.6979,709.1715" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[ad57c19ac60e931f9d8ac4882e497226]
link PbfTagFilter to Tag--><path codeLine="26" d="M337.2813,482.2965 C349.8542,542.5465 381.8854,654.2965 454.1667,715.1611 C569.7813,812.5153 648.125,733.0257 783.3333,800.5778 C824.3021,821.0465 864.4479,855.5882 889.8125,879.7132 " fill="none" id="PbfTagFilter-to-Tag" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="#545454" points="893.75,883.484,889.8553,873.9928,889.9862,879.8839,884.0951,880.0148,893.75,883.484" style="stroke:#545454;stroke-width:1.5625;"/><text fill="#A0A0A0" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="38.5417" x="639.5833" y="762.6628">filters</text><!--MD5=[c8a6b7b4b88f4c6d9233f6e4bfdff5df]
link PbfTagList to Tag--><path codeLine="33" d="M950.9271,715.4215 C939.0208,781.9528 927.9479,843.8174 921.7604,878.3382 " fill="none" id="PbfTagList-to-Tag" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="#545454" points="920.8125,883.6403,926.5717,875.1501,921.7337,878.5141,918.3697,873.6761,920.8125,883.6403" style="stroke:#545454;stroke-width:1.5625;"/><text fill="#A0A0A0" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="40.625" x="946.875" y="762.6628">stores</text><!--MD5=[8b40e2470dba9ca1d038d72d18121892]
reverse link Keyed to PbfTagMap--><path codeLine="64" d="M636.4583,122.6299 C636.4583,141.9007 636.4583,166.1611 636.4583,192.6403 " fill="none" id="Keyed-backto-PbfTagMap" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="629.1667,122.6299,636.4583,101.7965,643.75,122.6299,629.1667,122.6299" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[bbdb956dbc56d14ff1f462eec549b843]
link PbfTagMap to Tag--><path codeLine="65" d="M784.7708,687.6507 C831.1875,764.7861 876.4063,839.932 899.9375,879.0257 " fill="none" id="PbfTagMap-to-Tag" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="#545454" points="902.6979,883.6195,901.4225,873.4398,900.0073,879.1599,894.2872,877.7448,902.6979,883.6195" style="stroke:#545454;stroke-width:1.5625;"/><text fill="#A0A0A0" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="40.625" x="837.5" y="762.6628">stores</text><!--MD5=[b494e1d0b9c72b23ebdcad1360657f46]
reverse link PbfTagFilter to PbfTagPatternFilter--><path codeLine="93" d="M325.2396,502.8903 C319.1354,578.682 308.6771,708.5153 301.2708,800.5049 " fill="none" id="PbfTagFilter-backto-PbfTagPatternFilter" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="317.9688,502.2965,326.9167,482.1195,332.5104,503.4632,317.9688,502.2965" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[19808d32ec61d77a74356442bacb26b6]
link PbfTags to Tag--><path codeLine="107" d="M1327.8229,513.7236 C1293.625,572.057 1240.5729,654.0778 1181.25,715.1611 C1109.3333,789.2236 1005.9375,854.859 952.1771,886.609 " fill="none" id="PbfTags-to-Tag" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="#545454" points="947.4479,889.3903,957.6413,888.2299,951.9375,886.7502,953.4172,881.0465,947.4479,889.3903" style="stroke:#545454;stroke-width:1.5625;"/><text fill="#A0A0A0" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="133.3333" x="1145.8333" y="762.6628">provides utilities for</text><!--MD5=[459c41ccd7ab0510ec4068a3964c583c]
@startuml

    !include lexakai.theme
    
    title "com.telenav.mesakit.map.data.formats.pbf.model.tags"
    
    abstract BaseStringConverter
    
    interface PbfTagFilter
    interface Keyed
    
    BaseStringConverter <|- - PbfTagPatternFilter.Converter
    class PbfTagPatternFilter.Converter
    {
        - -(constructors)- -
        +Converter(Listener)
    }
    
    PbfTagMap <|- - EmptyPbfTagMap
    class EmptyPbfTagMap
    {
        - -(constructors)- -
        #EmptyPbfTagMap()
    }
    
    PbfTagFilter - -> Tag : "filters"
    interface PbfTagFilter
    {
        - -(filtering)- -
        +boolean accepts(Tag)
    }
    
    PbfTagList - -> Tag : "stores"
    class PbfTagList
    {
        - -
        +Tag get(String key)
        +Tag get(int index)
        +void retainOnly(Set<String> keys)
        - -(checks)- -
        +boolean isValid()
        - -(collection)- -
        +PbfTagList add(Tag)
        +PbfTagList add(String key, String value)
        +PbfTagList addAll(Iterable<Tag> tags)
        +List<Tag> asList()
        +boolean containsKey(String key)
        +PbfTagList copy()
        +PbfTagList create()
        +PbfTagList from(Collection<Tag> tags)
        +PbfTagList from(Collection<Tag> tags, PbfTagFilter)
        +boolean isEmpty()
        +PbfTagList matchingKey(String key)
        +PbfTagList of(Tag)
        +void removeKey(String key)
        +PbfTagList set(int index, String key, String value)
        +int size()
        +PbfTagList sorted()
        +String valueForKey(String key)
        +String valueForKey(String key, String defaultValue)
        +PbfTagList withoutKey(String key)
    }
    
    Keyed <|- - PbfTagMap
    PbfTagMap - -> Tag : "stores"
    class PbfTagMap
    {
        - -(constructors)- -
        #PbfTagMap(int)
        - -
        +String get(String key, String defaultValue)
        +Tag tag(String key)
        +int valueAsNaturalNumber(String key)
        +boolean valueIsNo(String key)
        +boolean valueIsYes(String key)
        - -(collection)- -
        +boolean containsKey(String key)
        +PbfTagMap create()
        +PbfTagMap from(Collection<Tag> tags)
        +PbfTagMap from(Collection<Tag> tags, PbfTagFilter)
        +boolean isEmpty()
        +Iterator<String> keys()
        +void put(String key, String value)
        +void putAll(Iterable<Tag> tags)
        +int size()
        +String value(String key)
        +StringList valueSplit(String key)
        - -(primitive)- -
        +int valueAsInt(String key)
        +long valueAsLong(String key)
    }
    
    PbfTagFilter <|- - PbfTagPatternFilter
    class PbfTagPatternFilter
    {
        - -(constructors)- -
        +PbfTagPatternFilter(String)
        - -
        +Set<String> allFilteredTags()
        +Set<String> rejectedTags()
        - -(filtering)- -
        +PbfTagPatternFilter forPattern(String pattern)
        +SwitchParser.Builder<PbfTagPatternFilter> tagFilterSwitchParser(String name, String description)
        +SwitchParser.Builder<PbfTagPatternFilter> tagFilterSwitchParser()
    }
    
    PbfTags - -> Tag : "provides utilities for"
    class PbfTags
    {
        - -(collection)- -
        +PropertyMap tags(String prefix, Collection<Tag> tags)
        +List<Tag> tags(String prefix, PropertyMap properties)
        - -(parsing)- -
        +Tag parse(String)
    }
    
@enduml

@startuml









skinparam backgroundColor #333333






skinparam  {
    defaultFontName   "Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif"
    defaultFontSize   12
    defaultTextAlignment left
    shadowing false
    RoundCorner 10
    TitleFontSize 18
}

skinparam defaultFontName       "Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif"
skinparam defaultFontSize       12
skinparam dpi                   100
skinparam shadowing             false
skinparam roundcorner           16
skinparam ParticipantPadding    40
skinparam BoxPadding            40
skinparam Padding               3
skinparam ArrowColor            #545454
skinparam stereotype {
    CBackgroundColor #0066cf
    CBorderColor #0086ef
    ABackgroundColor #C8Ac00
    ABorderColor #D8Bc00
    IBackgroundColor #008400
    IBorderColor #239c23
    EBackgroundColor #cf6300
    EBorderColor #ef8300
    NBackgroundColor #3380b9
    NBorderColor #004d86
}
skinparam title {
	FontColor	                 #c0c0c0
 	BorderColor                  #545454
	FontSize	    	         20
	BorderRoundCorner            16
	BorderThickness 	         1
	BackgroundColor              #48494b
}


skinparam legend {
	BackgroundColor #303030
	BorderColor #404040
	FontColor #a0a0a0
}

	skinparam swimlane {
	BorderColor #5e5e5e
	BorderThickness 2
	TitleBackgroundColor  #6d6d6d-#484848
	TitleFontColor #303030
}

skinparam activity {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BarColor #00FF00
	StartColor #0060a8
	EndColor #0060a8
	DiamondBackgroundColor #6d6d6d-#3a3a3a
  	DiamondBorderColor #3a3a3a
  	DiamondFontColor #fefefe
}


skinparam participant {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	ParticipantBorderThickness 2
}


skinparam actor {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam arrow {
	Thickness 1.5
	Color #545454
	FontColor #a0a0a0
    FontStyle bold
    MessageAlignment center
}



skinparam sequence {
	BorderColor #303030
	TitleFontColor #303030
	BackgroundColor #333333
	StartColor #303030
	EndColor #303030
	BoxBackgroundColor #333333
	BoxBorderColor #484848
	BoxFontColor #484848
	LifeLineBorderColor #484848
	LifeLineBorderThickness 2
	LifeLineBackgroundColor #3a3a3a
	GroupBorderColor #484848
	GroupFontColor #484848
	GroupHeaderFontColor #0060a8
	GroupBackgroundColor #484848
	GroupHeaderBackgroundColor #333333
	DividerBackgroundColor #484848
    DividerBorderColor #484848
    DividerBorderThickness 2
    DividerFontColor #D8Bc00
	ReferenceBackgroundColor #333333
	ReferenceBorderColor #484848
	ReferenceFontColor #fefefe
	ReferenceHeaderBackgroundColor #484848
}


skinparam partition {
	BorderColor #303030
	FontColor #333333
	BackgroundColor #333333
}


skinparam collections {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam control {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam entity {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam boundary {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam agent {
	BackgroundColor #ff8000
	BorderColor #ff9933
	FontColor #484848
}


skinparam note {
	BorderThickness 1
	BackgroundColor #1b1b1a
	BorderColor #5e5e5e
	FontSize 11
	FontColor #a0a0a0
}


skinparam artifact {
	BorderThickness 10
	BorderColor #5e5e5e
	BackgroundColor #1b1b1a
	FontColor #D8Bc00
}


skinparam component {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam interface {
	BackgroundColor  #008400
	BorderColor  #007F00
	FontColor #484848
}


skinparam storage {
	BackgroundColor #ff8000
  	BorderColor #cc6600
	FontColor #222222
}


skinparam node {
	BackgroundColor #333333
	BorderColor #333333
	FontColor #C8Ac00
}


skinparam cloud {
	BackgroundColor #484848-black
	BorderColor #484848
	FontColor #D8Bc00
}


skinparam database {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BackgroundColor  #333333
}


skinparam class {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	HeaderBackgroundColor #1b1b1a
    BackgroundColor #282828
    BorderColor #5e5e5e
 	StereotypeFontColor #a0a0a0
    StereotypeFontStyle bold
	BorderThickness 1
	AttributeFontColor #D8Bc00
	AttributeFontSize 11
    FontColor #D8Bc00
    FontStyle bold
}


skinparam object {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	StereotypeFontColor #484848
	BorderThickness 1
	AttributeFontColor #fefefe
	AttributeFontSize 11
}


skinparam usecase {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BorderThickness 2
	StereotypeFontColor #303030
}


skinparam rectangle {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BackgroundColor #333333
	BorderThickness 2
	StereotypeFontColor #303030
}


skinparam package {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BackgroundColor #333333
	BorderThickness 2
}


skinparam folder {
	BackgroundColor #6d6d6d
  	BorderColor #ff8000
	FontColor #ff8000
	BorderThickness 2
}


skinparam frame {
	BackgroundColor #6d6d6d
  	BorderColor #0060a8
	FontColor #0060a8
	BorderThickness 2
}


skinparam state {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	StartColor #0060a8
	EndColor #0060a8
	AttributeFontColor #fefefe
	AttributeFontSize 11
}


skinparam queue {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam card {
	BackgroundColor #0060a8
	BorderColor #004d86
	FontColor $INFO_TEXT
}


skinparam file {
	BackgroundColor #6d6d6d-#484848
	BorderColor #0060a8
	FontColor #fefefe
}


skinparam stack {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}

    
    title "com.telenav.mesakit.map.data.formats.pbf.model.tags"
    
    abstract BaseStringConverter
    
    interface PbfTagFilter
    interface Keyed
    
    BaseStringConverter <|- - PbfTagPatternFilter.Converter
    class PbfTagPatternFilter.Converter
    {
        - -(constructors)- -
        +Converter(Listener)
    }
    
    PbfTagMap <|- - EmptyPbfTagMap
    class EmptyPbfTagMap
    {
        - -(constructors)- -
        #EmptyPbfTagMap()
    }
    
    PbfTagFilter - -> Tag : "filters"
    interface PbfTagFilter
    {
        - -(filtering)- -
        +boolean accepts(Tag)
    }
    
    PbfTagList - -> Tag : "stores"
    class PbfTagList
    {
        - -
        +Tag get(String key)
        +Tag get(int index)
        +void retainOnly(Set<String> keys)
        - -(checks)- -
        +boolean isValid()
        - -(collection)- -
        +PbfTagList add(Tag)
        +PbfTagList add(String key, String value)
        +PbfTagList addAll(Iterable<Tag> tags)
        +List<Tag> asList()
        +boolean containsKey(String key)
        +PbfTagList copy()
        +PbfTagList create()
        +PbfTagList from(Collection<Tag> tags)
        +PbfTagList from(Collection<Tag> tags, PbfTagFilter)
        +boolean isEmpty()
        +PbfTagList matchingKey(String key)
        +PbfTagList of(Tag)
        +void removeKey(String key)
        +PbfTagList set(int index, String key, String value)
        +int size()
        +PbfTagList sorted()
        +String valueForKey(String key)
        +String valueForKey(String key, String defaultValue)
        +PbfTagList withoutKey(String key)
    }
    
    Keyed <|- - PbfTagMap
    PbfTagMap - -> Tag : "stores"
    class PbfTagMap
    {
        - -(constructors)- -
        #PbfTagMap(int)
        - -
        +String get(String key, String defaultValue)
        +Tag tag(String key)
        +int valueAsNaturalNumber(String key)
        +boolean valueIsNo(String key)
        +boolean valueIsYes(String key)
        - -(collection)- -
        +boolean containsKey(String key)
        +PbfTagMap create()
        +PbfTagMap from(Collection<Tag> tags)
        +PbfTagMap from(Collection<Tag> tags, PbfTagFilter)
        +boolean isEmpty()
        +Iterator<String> keys()
        +void put(String key, String value)
        +void putAll(Iterable<Tag> tags)
        +int size()
        +String value(String key)
        +StringList valueSplit(String key)
        - -(primitive)- -
        +int valueAsInt(String key)
        +long valueAsLong(String key)
    }
    
    PbfTagFilter <|- - PbfTagPatternFilter
    class PbfTagPatternFilter
    {
        - -(constructors)- -
        +PbfTagPatternFilter(String)
        - -
        +Set<String> allFilteredTags()
        +Set<String> rejectedTags()
        - -(filtering)- -
        +PbfTagPatternFilter forPattern(String pattern)
        +SwitchParser.Builder<PbfTagPatternFilter> tagFilterSwitchParser(String name, String description)
        +SwitchParser.Builder<PbfTagPatternFilter> tagFilterSwitchParser()
    }
    
    PbfTags - -> Tag : "provides utilities for"
    class PbfTags
    {
        - -(collection)- -
        +PropertyMap tags(String prefix, Collection<Tag> tags)
        +List<Tag> tags(String prefix, PropertyMap properties)
        - -(parsing)- -
        +Tag parse(String)
    }
    
@enduml

PlantUML version 1.2021.01(Tue Feb 02 02:55:08 EST 2021)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Default Encoding: UTF-8
Language: en
Country: US
--></g></svg>