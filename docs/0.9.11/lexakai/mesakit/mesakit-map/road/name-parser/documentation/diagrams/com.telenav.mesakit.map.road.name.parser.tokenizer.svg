<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="1252.0833px" preserveAspectRatio="none" style="width:733px;height:1252px;background:#333333;" version="1.1" viewBox="0 0 733 1252" width="733.3333px" zoomAndPan="magnify"><defs/><g><rect fill="#48494B" height="41.2028" rx="8.3333" ry="8.3333" style="stroke:#545454;stroke-width:1.0416666666666667;" width="562.5" x="78.125" y="2.0833"/><text fill="#C0C0C0" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="20.8333" lengthAdjust="spacing" textLength="539.5833" x="89.5833" y="30.5583">com.telenav.mesakit.map.road.name.parser.tokenizer</text><!--MD5=[bcbbe00142df93bdbe46248d654ceed1]
cluster TokenList--><polygon fill="#333333" points="508.3333,52.6611,585.4167,52.6611,592.7083,79.8828,715.625,79.8828,715.625,229.7445,508.3333,229.7445,508.3333,52.6611" style="stroke:#333333;stroke-width:2.0833333333333335;"/><line style="stroke:#333333;stroke-width:2.0833333333333335;" x1="508.3333" x2="592.7083" y1="79.8828" y2="79.8828"/><text fill="#C8AC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="64.5833" x="515.625" y="69.9544">TokenList</text><!--MD5=[c28eb203dc1bb71508f92993e9c30cc5]
class TokenList.Builder--><rect codeLine="8" fill="#282828" height="103.123" id="TokenList.Builder" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="137.5" x="553.125" y="101.6195"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="137.5" x="553.125" y="101.6195"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="137.5" x="553.125" y="124.6745"/><rect codeLine="8" fill="none" height="103.123" id="TokenList.Builder" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="137.5" x="553.125" y="101.6195"/><ellipse cx="592.0833" cy="117.3136" fill="#0066CF" rx="10.4167" ry="10.4167" style="stroke:#0086EF;stroke-width:1.0416666666666667;"/><path d="M593.9937,121.7387 Q593.5665,121.9584 593.0965,122.0683 Q592.6265,122.1781 592.1077,122.1781 Q590.2645,122.1781 589.294,120.9635 Q588.3236,119.7489 588.3236,117.454 Q588.3236,115.153 589.294,113.9384 Q590.2645,112.7238 592.1077,112.7238 Q592.6265,112.7238 593.1026,112.8337 Q593.5787,112.9435 593.9937,113.1632 L593.9937,115.1652 Q593.5299,114.738 593.0935,114.5396 Q592.6571,114.3412 592.1932,114.3412 Q591.2044,114.3412 590.7009,115.1255 Q590.1973,115.9098 590.1973,117.454 Q590.1973,118.9921 590.7009,119.7764 Q591.2044,120.5607 592.1932,120.5607 Q592.6571,120.5607 593.0935,120.3623 Q593.5299,120.164 593.9937,119.7367 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="45.8333" x="614.1667" y="122.0378">Builder</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="554.1667" x2="689.5833" y1="133.0078" y2="133.0078"/><ellipse cx="564.5833" cy="168.3777" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="105.2083" x="576.0417" y="175.2889">Builder add(Token)</text><ellipse cx="564.5833" cy="188.1226" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="93.75" x="576.0417" y="195.0338">TokenList build()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="554.1667" x2="587.5" y1="151.2136" y2="151.2136"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="62.5" x="590.625" y="155.0232">(collection)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="656.25" x2="689.5833" y1="151.2136" y2="151.2136"/><!--MD5=[47de47a8b5f06cbc5e036fae0a9149b7]
class Iterable--><rect codeLine="6" fill="#282828" height="48.055" id="Iterable" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="86.4583" x="393.2292" y="129.2236"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="86.4583" x="393.2292" y="129.2236"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="86.4583" x="393.2292" y="152.2786"/><rect codeLine="6" fill="none" height="48.055" id="Iterable" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="86.4583" x="393.2292" y="129.2236"/><ellipse cx="407.8125" cy="144.9178" fill="#008400" rx="10.4167" ry="10.4167" style="stroke:#239C23;stroke-width:1.0416666666666667;"/><path d="M405.2165,142.0797 L405.2165,140.4928 L410.6425,140.4928 L410.6425,142.0797 L408.8298,142.0797 L408.8298,148.0184 L410.6425,148.0184 L410.6425,149.6053 L405.2165,149.6053 L405.2165,148.0184 L407.0292,148.0184 L407.0292,142.0797 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="48.9583" x="424.4792" y="149.6419">Iterable</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="394.2708" x2="478.6458" y1="160.612" y2="160.612"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="394.2708" x2="478.6458" y1="168.9453" y2="168.9453"/><!--MD5=[d8c8cfd5ca149094f5b67f9f607a5ec7]
class Token--><rect codeLine="15" fill="#282828" height="439.8743" id="Token" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="287.5" x="7.2917" y="356.307"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="287.5" x="7.2917" y="356.307"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="287.5" x="7.2917" y="379.362"/><rect codeLine="15" fill="none" height="439.8743" id="Token" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="287.5" x="7.2917" y="356.307"/><ellipse cx="123.4375" cy="372.0011" fill="#0066CF" rx="10.4167" ry="10.4167" style="stroke:#0086EF;stroke-width:1.0416666666666667;"/><path d="M125.3479,376.4262 Q124.9207,376.6459 124.4507,376.7558 Q123.9807,376.8656 123.4619,376.8656 Q121.6187,376.8656 120.6482,375.651 Q119.6777,374.4364 119.6777,372.1415 Q119.6777,369.8405 120.6482,368.6259 Q121.6187,367.4113 123.4619,367.4113 Q123.9807,367.4113 124.4568,367.5212 Q124.9329,367.631 125.3479,367.8507 L125.3479,369.8527 Q124.884,369.4255 124.4476,369.2271 Q124.0112,369.0287 123.5474,369.0287 Q122.5586,369.0287 122.0551,369.813 Q121.5515,370.5973 121.5515,372.1415 Q121.5515,373.6796 122.0551,374.4639 Q122.5586,375.2482 123.5474,375.2482 Q124.0112,375.2482 124.4476,375.0498 Q124.884,374.8515 125.3479,374.4242 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="40.625" x="146.3542" y="376.7253">Token</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="8.3333" x2="293.75" y1="387.6953" y2="387.6953"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="8.3333" x2="293.75" y1="396.0286" y2="396.0286"/><ellipse cx="18.75" cy="407.487" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="255.2083" x="30.2083" y="414.3982">Token matches(String symbol, TokenMatcher)</text><ellipse cx="18.75" cy="427.2319" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="218.75" x="30.2083" y="434.1431">Token matches(Symbol, TokenMatcher)</text><ellipse cx="18.75" cy="446.9767" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="209.375" x="30.2083" y="453.8879">Token matchesAnyOf(String... values)</text><ellipse cx="18.75" cy="466.7216" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="226.0417" x="30.2083" y="473.6328">Token matchesSequence(String... words)</text><ellipse cx="18.75" cy="486.4665" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="136.4583" x="30.2083" y="493.3777">Token of(SymbolStream)</text><ellipse cx="18.75" cy="506.2113" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="66.6667" x="30.2083" y="513.1226">String text()</text><ellipse cx="18.75" cy="549.8678" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="93.75" x="30.2083" y="556.779">boolean isDash()</text><ellipse cx="18.75" cy="569.6126" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="85.4167" x="30.2083" y="576.5238">boolean isDot()</text><ellipse cx="18.75" cy="589.3575" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="94.7917" x="30.2083" y="596.2687">boolean isSlash()</text><ellipse cx="18.75" cy="609.1024" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="128.125" x="30.2083" y="616.0136">boolean isWhitespace()</text><ellipse cx="18.75" cy="628.8472" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="94.7917" x="30.2083" y="635.7585">boolean isWord()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="8.3333" x2="124.4792" y1="532.7037" y2="532.7037"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="46.875" x="127.6042" y="536.5133">(checks)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="177.6042" x2="293.75" y1="532.7037" y2="532.7037"/><ellipse cx="18.75" cy="672.5037" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="191.6667" x="30.2083" y="679.4149">Token addTo(Set&lt;Token&gt; tokens)</text><ellipse cx="18.75" cy="692.2485" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="101.0417" x="30.2083" y="699.1597">int symbolCount()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="8.3333" x2="116.6667" y1="655.3396" y2="655.3396"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="62.5" x="119.7917" y="659.1492">(collection)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="185.4167" x2="293.75" y1="655.3396" y2="655.3396"/><ellipse cx="18.75" cy="735.9049" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="76.0417" x="30.2083" y="742.8162">int identifier()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="8.3333" x2="122.9167" y1="718.7408" y2="718.7408"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="50" x="126.0417" y="722.5505">(identity)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="179.1667" x2="293.75" y1="718.7408" y2="718.7408"/><ellipse cx="18.75" cy="779.5614" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="75" x="30.2083" y="786.4726">String name()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="8.3333" x2="122.9167" y1="762.3973" y2="762.3973"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="50" x="126.0417" y="766.2069">(naming)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="179.1667" x2="293.75" y1="762.3973" y2="762.3973"/><!--MD5=[ad96b8070e6fb79fac7f9849615cb791]
class TokenList--><rect codeLine="40" fill="#282828" height="617.5781" id="TokenList" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="210.4167" x="331.25" y="267.2445"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="210.4167" x="331.25" y="267.2445"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="210.4167" x="331.25" y="290.2995"/><rect codeLine="40" fill="none" height="617.5781" id="TokenList" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="210.4167" x="331.25" y="267.2445"/><ellipse cx="396.875" cy="282.9386" fill="#0066CF" rx="10.4167" ry="10.4167" style="stroke:#0086EF;stroke-width:1.0416666666666667;"/><path d="M398.7854,287.3637 Q398.3582,287.5834 397.8882,287.6933 Q397.4182,287.8031 396.8994,287.8031 Q395.0562,287.8031 394.0857,286.5885 Q393.1152,285.3739 393.1152,283.079 Q393.1152,280.778 394.0857,279.5634 Q395.0562,278.3488 396.8994,278.3488 Q397.4182,278.3488 397.8943,278.4587 Q398.3704,278.5685 398.7854,278.7882 L398.7854,280.7902 Q398.3215,280.363 397.8851,280.1646 Q397.4487,279.9662 396.9849,279.9662 Q395.9961,279.9662 395.4926,280.7505 Q394.989,281.5348 394.989,283.079 Q394.989,284.6171 395.4926,285.4014 Q395.9961,286.1857 396.9849,286.1857 Q397.4487,286.1857 397.8851,285.9873 Q398.3215,285.789 398.7854,285.3617 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="64.5833" x="419.7917" y="287.6628">TokenList</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="332.2917" x2="540.625" y1="298.6328" y2="298.6328"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="332.2917" x2="540.625" y1="306.9661" y2="306.9661"/><ellipse cx="342.7083" cy="318.4245" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="73.9583" x="354.1667" y="325.3357">void at(int at)</text><ellipse cx="342.7083" cy="338.1694" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="36.4583" x="354.1667" y="345.0806">int at()</text><ellipse cx="342.7083" cy="357.9142" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="87.5" x="354.1667" y="364.8254">Token current()</text><ellipse cx="342.7083" cy="377.6591" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="112.5" x="354.1667" y="384.5703">Token get(int index)</text><ellipse cx="342.7083" cy="397.404" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="144.7917" x="354.1667" y="404.3152">boolean lookingAt(Token)</text><ellipse cx="342.7083" cy="417.1488" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="75" x="354.1667" y="424.0601">int previous()</text><ellipse cx="342.7083" cy="436.8937" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="89.5833" x="354.1667" y="443.8049">String rawText()</text><ellipse cx="342.7083" cy="456.6386" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="102.0833" x="354.1667" y="463.5498">String remainder()</text><ellipse cx="342.7083" cy="476.3835" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="163.5417" x="354.1667" y="483.2947">String remainderCapitalized()</text><ellipse cx="342.7083" cy="496.1283" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="114.5833" x="354.1667" y="503.0396">void skipAny(Token)</text><ellipse cx="342.7083" cy="515.8732" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="126.0417" x="354.1667" y="522.7844">Token token(int index)</text><ellipse cx="342.7083" cy="559.5296" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="89.5833" x="354.1667" y="566.4408">boolean atLast()</text><ellipse cx="342.7083" cy="579.2745" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="68.75" x="354.1667" y="586.1857">Token first()</text><ellipse cx="342.7083" cy="599.0194" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="100" x="354.1667" y="605.9306">boolean isEmpty()</text><ellipse cx="342.7083" cy="618.7642" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="65.625" x="354.1667" y="625.6755">Token last()</text><ellipse cx="342.7083" cy="638.5091" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="136.4583" x="354.1667" y="645.4203">Token remove(int index)</text><ellipse cx="342.7083" cy="658.254" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="112.5" x="354.1667" y="665.1652">Token removeFirst()</text><ellipse cx="342.7083" cy="677.9989" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="110.4167" x="354.1667" y="684.9101">Token removeLast()</text><ellipse cx="342.7083" cy="697.7437" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="47.9167" x="354.1667" y="704.6549">int size()</text><ellipse cx="342.7083" cy="717.4886" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="178.125" x="354.1667" y="724.3998">List&lt;? extends Token&gt; tokens()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="332.2917" x2="402.0833" y1="542.3655" y2="542.3655"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="62.5" x="405.2083" y="546.1751">(collection)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="470.8333" x2="540.625" y1="542.3655" y2="542.3655"/><ellipse cx="342.7083" cy="761.145" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="104.1667" x="354.1667" y="768.0562">boolean hasMore()</text><ellipse cx="342.7083" cy="780.8899" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="60.4167" x="354.1667" y="787.8011">void next()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="332.2917" x2="405.7292" y1="743.9809" y2="743.9809"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="55.2083" x="408.8542" y="747.7905">(iteration)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="467.1875" x2="540.625" y1="743.9809" y2="743.9809"/><ellipse cx="342.7083" cy="824.5463" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="63.5417" x="354.1667" y="831.4575">void reset()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="332.2917" x2="406.7708" y1="807.3822" y2="807.3822"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="53.125" x="409.8958" y="811.1918">(lifecycle)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="466.1458" x2="540.625" y1="807.3822" y2="807.3822"/><ellipse cx="342.7083" cy="868.2027" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="125" x="354.1667" y="875.1139">boolean match(Token)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="332.2917" x2="403.125" y1="851.0386" y2="851.0386"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="60.4167" x="406.25" y="854.8482">(matching)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="469.7917" x2="540.625" y1="851.0386" y2="851.0386"/><!--MD5=[c91515e94076c69f6a17b35bfa899cb2]
class TokenMatcher--><rect codeLine="73" fill="#282828" height="83.3781" id="TokenMatcher" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="191.6667" x="55.2083" y="1054.7445"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="191.6667" x="55.2083" y="1054.7445"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="191.6667" x="55.2083" y="1077.7995"/><rect codeLine="73" fill="none" height="83.3781" id="TokenMatcher" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="191.6667" x="55.2083" y="1054.7445"/><ellipse cx="97.9167" cy="1070.4386" fill="#008400" rx="10.4167" ry="10.4167" style="stroke:#239C23;stroke-width:1.0416666666666667;"/><path d="M95.3206,1067.6005 L95.3206,1066.0136 L100.7467,1066.0136 L100.7467,1067.6005 L98.9339,1067.6005 L98.9339,1073.5392 L100.7467,1073.5392 L100.7467,1075.1261 L95.3206,1075.1261 L95.3206,1073.5392 L97.1334,1073.5392 L97.1334,1067.6005 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="91.6667" x="120.8333" y="1075.1628">TokenMatcher</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="56.25" x2="245.8333" y1="1086.1328" y2="1086.1328"/><ellipse cx="66.6667" cy="1121.5027" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="159.375" x="78.125" y="1128.4139">Token match(SymbolStream)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="56.25" x2="117.7083" y1="1104.3386" y2="1104.3386"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="60.4167" x="120.8333" y="1108.1482">(matching)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="184.375" x2="245.8333" y1="1104.3386" y2="1104.3386"/><!--MD5=[7763e024349b4cac7a01779176319d84]
class Tokenizer--><rect codeLine="79" fill="#282828" height="297.4935" id="Tokenizer" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="210.4167" x="283.3333" y="947.4528"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="210.4167" x="283.3333" y="947.4528"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="210.4167" x="283.3333" y="970.5078"/><rect codeLine="79" fill="none" height="297.4935" id="Tokenizer" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="210.4167" x="283.3333" y="947.4528"/><ellipse cx="348.9583" cy="963.147" fill="#0066CF" rx="10.4167" ry="10.4167" style="stroke:#0086EF;stroke-width:1.0416666666666667;"/><path d="M350.8687,967.572 Q350.4415,967.7917 349.9715,967.9016 Q349.5015,968.0115 348.9827,968.0115 Q347.1395,968.0115 346.169,966.7969 Q345.1986,965.5823 345.1986,963.2874 Q345.1986,960.9863 346.169,959.7717 Q347.1395,958.5571 348.9827,958.5571 Q349.5015,958.5571 349.9776,958.667 Q350.4537,958.7769 350.8687,958.9966 L350.8687,960.9985 Q350.4049,960.5713 349.9685,960.3729 Q349.5321,960.1746 349.0682,960.1746 Q348.0794,960.1746 347.5759,960.9589 Q347.0723,961.7432 347.0723,963.2874 Q347.0723,964.8254 347.5759,965.6097 Q348.0794,966.394 349.0682,966.394 Q349.5321,966.394 349.9685,966.1957 Q350.4049,965.9973 350.8687,965.5701 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="64.5833" x="371.875" y="967.8711">Tokenizer</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="284.375" x2="492.7083" y1="978.8411" y2="978.8411"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="284.375" x2="492.7083" y1="987.1745" y2="987.1745"/><ellipse cx="294.7917" cy="998.6328" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="146.875" x="306.25" y="1005.544">Token create(String name)</text><ellipse cx="294.7917" cy="1042.2892" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="128.125" x="306.25" y="1049.2004">boolean isDash(Token)</text><ellipse cx="294.7917" cy="1062.0341" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="119.7917" x="306.25" y="1068.9453">boolean isDot(Token)</text><ellipse cx="294.7917" cy="1081.779" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="132.2917" x="306.25" y="1088.6902">boolean isLetter(Token)</text><ellipse cx="294.7917" cy="1101.5238" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="159.375" x="306.25" y="1108.4351">boolean isPoundSign(Token)</text><ellipse cx="294.7917" cy="1121.2687" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="157.2917" x="306.25" y="1128.1799">boolean isSemicolon(Token)</text><ellipse cx="294.7917" cy="1141.0136" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="129.1667" x="306.25" y="1147.9248">boolean isSlash(Token)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="284.375" x2="361.9792" y1="1025.1251" y2="1025.1251"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="46.875" x="365.1042" y="1028.9347">(checks)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="415.1042" x2="492.7083" y1="1025.1251" y2="1025.1251"/><ellipse cx="294.7917" cy="1184.67" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="178.125" x="306.25" y="1191.5812">TokenList tokenize(String input)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="284.375" x2="354.1667" y1="1167.5059" y2="1167.5059"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="62.5" x="357.2917" y="1171.3155">(collection)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="422.9167" x2="492.7083" y1="1167.5059" y2="1167.5059"/><ellipse cx="294.7917" cy="1228.3264" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="150" x="306.25" y="1235.2376">Token next(SymbolStream)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="284.375" x2="357.8125" y1="1211.1623" y2="1211.1623"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="55.2083" x="360.9375" y="1214.9719">(iteration)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="419.2708" x2="492.7083" y1="1211.1623" y2="1211.1623"/><!--MD5=[ab3fe4be2839a2475aac33ca94f28208]
reverse link Iterable to TokenList--><path codeLine="39" d="M436.4583,198.2236 C436.4583,217.0778 436.4583,240.8486 436.4583,267.2445 " fill="none" id="Iterable-backto-TokenList" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="429.1667,197.984,436.4583,177.1507,443.75,197.984,429.1667,197.984" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[df5121ee66ee02c22d79d6eb8202bf45]
link Token to TokenList--><!--MD5=[2588508b30b86432f8c139755e3db7ce]
link Token to TokenMatcher--><!--MD5=[a4b944d6c4e92489768f6c6b5fb00fc3]
link TokenMatcher to Tokenizer--><!--MD5=[3921af0b51c094a8d5405f2d900d8675]
@startuml

    !include lexakai.theme
    
    title "com.telenav.mesakit.map.road.name.parser.tokenizer"
    
    interface Iterable
    
    class TokenList.Builder
    {
        - -(collection)- -
        +Builder add(Token)
        +TokenList build()
    }
    
    class Token
    {
        - -
        +Token matches(String symbol, TokenMatcher)
        +Token matches(Symbol, TokenMatcher)
        +Token matchesAnyOf(String... values)
        +Token matchesSequence(String... words)
        +Token of(SymbolStream)
        +String text()
        - -(checks)- -
        +boolean isDash()
        +boolean isDot()
        +boolean isSlash()
        +boolean isWhitespace()
        +boolean isWord()
        - -(collection)- -
        +Token addTo(Set<Token> tokens)
        +int symbolCount()
        - -(identity)- -
        +int identifier()
        - -(naming)- -
        +String name()
    }
    
    Iterable <|- - TokenList
    class TokenList
    {
        - -
        +void at(int at)
        +int at()
        +Token current()
        +Token get(int index)
        +boolean lookingAt(Token)
        +int previous()
        +String rawText()
        +String remainder()
        +String remainderCapitalized()
        +void skipAny(Token)
        +Token token(int index)
        - -(collection)- -
        +boolean atLast()
        +Token first()
        +boolean isEmpty()
        +Token last()
        +Token remove(int index)
        +Token removeFirst()
        +Token removeLast()
        +int size()
        +List<? extends Token> tokens()
        - -(iteration)- -
        +boolean hasMore()
        +void next()
        - -(lifecycle)- -
        +void reset()
        - -(matching)- -
        +boolean match(Token)
    }
    
    interface TokenMatcher
    {
        - -(matching)- -
        +Token match(SymbolStream)
    }
    
    class Tokenizer
    {
        - -
        +Token create(String name)
        - -(checks)- -
        +boolean isDash(Token)
        +boolean isDot(Token)
        +boolean isLetter(Token)
        +boolean isPoundSign(Token)
        +boolean isSemicolon(Token)
        +boolean isSlash(Token)
        - -(collection)- -
        +TokenList tokenize(String input)
        - -(iteration)- -
        +Token next(SymbolStream)
    }
    
@enduml

@startuml









skinparam backgroundColor #333333






skinparam  {
    defaultFontName   "Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif"
    defaultFontSize   12
    defaultTextAlignment left
    shadowing false
    RoundCorner 10
    TitleFontSize 18
}

skinparam defaultFontName       "Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif"
skinparam defaultFontSize       12
skinparam dpi                   100
skinparam shadowing             false
skinparam roundcorner           16
skinparam ParticipantPadding    40
skinparam BoxPadding            40
skinparam Padding               3
skinparam ArrowColor            #545454
skinparam stereotype {
    CBackgroundColor #0066cf
    CBorderColor #0086ef
    ABackgroundColor #C8Ac00
    ABorderColor #D8Bc00
    IBackgroundColor #008400
    IBorderColor #239c23
    EBackgroundColor #cf6300
    EBorderColor #ef8300
    NBackgroundColor #3380b9
    NBorderColor #004d86
}
skinparam title {
	FontColor	                 #c0c0c0
 	BorderColor                  #545454
	FontSize	    	         20
	BorderRoundCorner            16
	BorderThickness 	         1
	BackgroundColor              #48494b
}


skinparam legend {
	BackgroundColor #303030
	BorderColor #404040
	FontColor #a0a0a0
}

	skinparam swimlane {
	BorderColor #5e5e5e
	BorderThickness 2
	TitleBackgroundColor  #6d6d6d-#484848
	TitleFontColor #303030
}

skinparam activity {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BarColor #00FF00
	StartColor #0060a8
	EndColor #0060a8
	DiamondBackgroundColor #6d6d6d-#3a3a3a
  	DiamondBorderColor #3a3a3a
  	DiamondFontColor #fefefe
}


skinparam participant {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	ParticipantBorderThickness 2
}


skinparam actor {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam arrow {
	Thickness 1.5
	Color #545454
	FontColor #a0a0a0
    FontStyle bold
    MessageAlignment center
}



skinparam sequence {
	BorderColor #303030
	TitleFontColor #303030
	BackgroundColor #333333
	StartColor #303030
	EndColor #303030
	BoxBackgroundColor #333333
	BoxBorderColor #484848
	BoxFontColor #484848
	LifeLineBorderColor #484848
	LifeLineBorderThickness 2
	LifeLineBackgroundColor #3a3a3a
	GroupBorderColor #484848
	GroupFontColor #484848
	GroupHeaderFontColor #0060a8
	GroupBackgroundColor #484848
	GroupHeaderBackgroundColor #333333
	DividerBackgroundColor #484848
    DividerBorderColor #484848
    DividerBorderThickness 2
    DividerFontColor #D8Bc00
	ReferenceBackgroundColor #333333
	ReferenceBorderColor #484848
	ReferenceFontColor #fefefe
	ReferenceHeaderBackgroundColor #484848
}


skinparam partition {
	BorderColor #303030
	FontColor #333333
	BackgroundColor #333333
}


skinparam collections {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam control {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam entity {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam boundary {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam agent {
	BackgroundColor #ff8000
	BorderColor #ff9933
	FontColor #484848
}


skinparam note {
	BorderThickness 1
	BackgroundColor #1b1b1a
	BorderColor #5e5e5e
	FontSize 11
	FontColor #a0a0a0
}


skinparam artifact {
	BorderThickness 10
	BorderColor #5e5e5e
	BackgroundColor #1b1b1a
	FontColor #D8Bc00
}


skinparam component {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam interface {
	BackgroundColor  #008400
	BorderColor  #007F00
	FontColor #484848
}


skinparam storage {
	BackgroundColor #ff8000
  	BorderColor #cc6600
	FontColor #222222
}


skinparam node {
	BackgroundColor #333333
	BorderColor #333333
	FontColor #C8Ac00
}


skinparam cloud {
	BackgroundColor #484848-black
	BorderColor #484848
	FontColor #D8Bc00
}


skinparam database {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BackgroundColor  #333333
}


skinparam class {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	HeaderBackgroundColor #1b1b1a
    BackgroundColor #282828
    BorderColor #5e5e5e
 	StereotypeFontColor #a0a0a0
    StereotypeFontStyle bold
	BorderThickness 1
	AttributeFontColor #D8Bc00
	AttributeFontSize 11
    FontColor #D8Bc00
    FontStyle bold
}


skinparam object {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	StereotypeFontColor #484848
	BorderThickness 1
	AttributeFontColor #fefefe
	AttributeFontSize 11
}


skinparam usecase {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BorderThickness 2
	StereotypeFontColor #303030
}


skinparam rectangle {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BackgroundColor #333333
	BorderThickness 2
	StereotypeFontColor #303030
}


skinparam package {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BackgroundColor #333333
	BorderThickness 2
}


skinparam folder {
	BackgroundColor #6d6d6d
  	BorderColor #ff8000
	FontColor #ff8000
	BorderThickness 2
}


skinparam frame {
	BackgroundColor #6d6d6d
  	BorderColor #0060a8
	FontColor #0060a8
	BorderThickness 2
}


skinparam state {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	StartColor #0060a8
	EndColor #0060a8
	AttributeFontColor #fefefe
	AttributeFontSize 11
}


skinparam queue {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam card {
	BackgroundColor #0060a8
	BorderColor #004d86
	FontColor $INFO_TEXT
}


skinparam file {
	BackgroundColor #6d6d6d-#484848
	BorderColor #0060a8
	FontColor #fefefe
}


skinparam stack {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}

    
    title "com.telenav.mesakit.map.road.name.parser.tokenizer"
    
    interface Iterable
    
    class TokenList.Builder
    {
        - -(collection)- -
        +Builder add(Token)
        +TokenList build()
    }
    
    class Token
    {
        - -
        +Token matches(String symbol, TokenMatcher)
        +Token matches(Symbol, TokenMatcher)
        +Token matchesAnyOf(String... values)
        +Token matchesSequence(String... words)
        +Token of(SymbolStream)
        +String text()
        - -(checks)- -
        +boolean isDash()
        +boolean isDot()
        +boolean isSlash()
        +boolean isWhitespace()
        +boolean isWord()
        - -(collection)- -
        +Token addTo(Set<Token> tokens)
        +int symbolCount()
        - -(identity)- -
        +int identifier()
        - -(naming)- -
        +String name()
    }
    
    Iterable <|- - TokenList
    class TokenList
    {
        - -
        +void at(int at)
        +int at()
        +Token current()
        +Token get(int index)
        +boolean lookingAt(Token)
        +int previous()
        +String rawText()
        +String remainder()
        +String remainderCapitalized()
        +void skipAny(Token)
        +Token token(int index)
        - -(collection)- -
        +boolean atLast()
        +Token first()
        +boolean isEmpty()
        +Token last()
        +Token remove(int index)
        +Token removeFirst()
        +Token removeLast()
        +int size()
        +List<? extends Token> tokens()
        - -(iteration)- -
        +boolean hasMore()
        +void next()
        - -(lifecycle)- -
        +void reset()
        - -(matching)- -
        +boolean match(Token)
    }
    
    interface TokenMatcher
    {
        - -(matching)- -
        +Token match(SymbolStream)
    }
    
    class Tokenizer
    {
        - -
        +Token create(String name)
        - -(checks)- -
        +boolean isDash(Token)
        +boolean isDot(Token)
        +boolean isLetter(Token)
        +boolean isPoundSign(Token)
        +boolean isSemicolon(Token)
        +boolean isSlash(Token)
        - -(collection)- -
        +TokenList tokenize(String input)
        - -(iteration)- -
        +Token next(SymbolStream)
    }
    
@enduml

PlantUML version 1.2021.01(Tue Feb 02 00:55:08 MST 2021)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Default Encoding: UTF-8
Language: en
Country: US
--></g></svg>