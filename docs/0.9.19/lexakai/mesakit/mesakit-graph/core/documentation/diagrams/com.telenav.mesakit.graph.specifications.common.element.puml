
@startuml

    !include lexakai.theme
    
    title "com.telenav.mesakit.graph.specifications.common.element"
    
    abstract BaseValidator
    abstract BaseRepeater
    
    interface AttributeStore
    interface Iterable
    interface Unloadable
    interface RegistryTrait
    interface CompressibleCollection
    interface Validatable
    
    GraphElementStore <|-- ArchivedGraphElementStore
    Unloadable <|-- ArchivedGraphElementStore
    RegistryTrait <|-- ArchivedGraphElementStore
    abstract class ArchivedGraphElementStore<T>
    {
        --(constructors)--
        #ArchivedGraphElementStore(Graph)
        --
        +void attach(GraphArchive)
        +void loaded(Resource)
        +void loaded(GraphArchive)
        +void loading(GraphArchive)
        +void loading(Resource)
        +void saved(GraphArchive)
        +void saving(GraphArchive)
        #void onAttached(GraphArchive)
        #void onAttaching(GraphArchive)
        #void onLoaded(Resource)
        #void onLoaded(GraphArchive)
        #void onLoading(GraphArchive)
        #void onLoading(Resource)
        #void onSaved(GraphArchive)
        #void onSaving(GraphArchive)
        #void onUnloaded()
        #void onUnloading()
        #Precision precision()
        --(checks)--
        +boolean isUnloaded()
        --(read)--
        +void loadAll(AttributeSet)
        +void loadAll()
        +void loadAllExcept(AttributeSet)
        #void load(Attribute<?>)
        #void loadField(String fieldName)
        --(write)--
        +void save()
    }
    
    Attribute <|-- GraphElementAttributes.GraphElementAttribute
    class GraphElementAttributes.GraphElementAttribute
    {
        --(constructors)--
        +GraphElementAttribute(String)
    }
    
    AttributeList <|-- GraphElementAttributes
    class GraphElementAttributes<T>
    {
        --(constructors)--
        #GraphElementAttributes()
        --
        +GraphElementAttributes<?> get()
        #DataSpecification dataSpecification()
    }
    
    GraphElementPropertySet <|-- GraphElementProperties
    class GraphElementProperties<T>
    {
        --(constructors)--
        #GraphElementProperties()
        --
        +GraphElementProperties get()
    }
    
    GraphElementProperty <|-- GraphElementProperties.GraphElementProperty
    abstract class GraphElementProperties.GraphElementProperty
    {
        --(constructors)--
        #GraphElementProperty(String, Attribute<?>)
    }
    
    BaseRepeater <|-- GraphElementStore
    Iterable <|-- GraphElementStore
    CompressibleCollection <|-- GraphElementStore
    AttributeStore <|-- GraphElementStore
    Validatable <|-- GraphElementStore
    abstract class GraphElementStore<T>
    {
        --(constructors)--
        #GraphElementStore(Graph)
        --
        +Addable<T> adder()
        +void commit()
        +void postCommit(Runnable code)
        +PbfRevisionNumber retrievePbfRevisionNumber(GraphElement)
        +void storeAttributes(GraphElement)
        +void storeTags(GraphElement, PbfTagList tags)
        +PbfTagCodec tagCodec()
        +TagStore tags()
        #DataSpecification dataSpecification()
        #EdgeStore edgeStore()
        #Class<T> elementType()
        #void onAdded(T ignored)
        #void onAdding(T ignored)
        #void onCommit()
        #void overwriteElement(int existingIndex, long existingIdentifier, long newIdentifier)
        #PlaceStore placeStore()
        #RelationStore relationStore()
        #ShapePointStore shapePointStore()
        #VertexStore vertexStore()
        --(collection)--
        +Iterator<List<T>> batches(Count batchSize)
        +boolean containsIdentifier(GraphElementIdentifier)
        +boolean containsIdentifier(long identifier)
        +int count()
        +Count discarded()
        +boolean isEmpty()
        +Count retrieveCount()
        +int retrieveIndex(long identifier)
        +int retrieveIndex(T element)
        +Time retrieveLastModificationTime(GraphElement)
        +PbfTagList retrieveTagList(GraphElement)
        +PbfTagMap retrieveTagMap(GraphElement)
        +ObjectList<Attribute<?>> supportedAttributes()
        #int identifierToIndex(long identifier, IndexingMode)
        #int nextIndex()
        #void onAdd(T element)
        #void remove(GraphElement)
        #void resetIndex()
        --(factory)--
        #DataSpecification.GraphElementFactory<T> elementFactory()
        --(functional)--
        #Estimate estimatedElements()
        #Estimate estimatedElements(Class<? extends GraphElement> type)
        #Estimate estimatedNodes()
        #Estimate estimatedRelations()
        #Estimate estimatedWays()
        --(identity)--
        +long retrieveIdentifier(int index)
        +PbfChangeSetIdentifier retrievePbfChangeSetIdentifier(GraphElement)
        +PbfUserIdentifier retrievePbfUserIdentifier(GraphElement)
        --(io)--
        +void flush()
        --(lifecycle)--
        +void onInitialize()
        --(metadata)--
        #Metadata metadata()
        --(naming)--
        +PbfUserName retrievePbfUserName(GraphElement)
    }
    
    enum GraphElementStore.IndexingMode
    {
        CREATE
        GET
    }
    
    BaseValidator <|-- GraphElementStore.StoreValidator
    abstract class GraphElementStore.StoreValidator
    {
        --(checks)--
        #boolean isNull(PrimitiveList, int index)
    }
    
@enduml

