
@startuml

    !include lexakai.theme
    
    title "com.telenav.mesakit.map.region.border.cache"
    
    abstract BaseComponent
    abstract BaseRepeater
    
    interface ProjectTrait
    
    BaseComponent <|-- BorderCache
    ProjectTrait <|-- BorderCache
    BorderCache --> Region : "loads borders for"
    BorderCache o-- BorderSpatialIndex : "indexed by"
    abstract class BorderCache<T>
    {
        --(constructors)--
        #BorderCache(Settings<T>)
        --
        +Collection<Polygon> borders(T object)
        +T object(Location)
        #void assignMultiPolygonIdentity(PbfTagMap relationTags, Collection<Border<T>> objects)
        #RegionIdentity identityForRegion(T region)
        #T regionForIdentity(RegionIdentity)
        #Settings<T> settings()
        --(collection)--
        #BorderSpatialIndex<T> index()
        --(naming)--
        +String name()
        --(read)--
        +boolean loadBorders()
        +BorderCache<T> loadIdentities()
    }
    
    BaseRepeater <|-- RegionIdentityCache
    class RegionIdentityCache<T>
    {
        --(constructors)--
        +RegionIdentityCache(Class<T>)
        --(read)--
        +boolean load(InputStream, SerializationSession)
        +boolean load(File cacheFile, SerializationSession)
        --(write)--
        +void save(SerializationSession, Version, Set<RegionIdentity> identities)
    }
    
    class BorderCache.Settings<R>
    {
        --(constructors)--
        +Settings()
        +Settings(Settings<R>)
        --
        +Extractor<R,PbfWay> regionExtractor()
        +Class<R> type()
        +Settings<R> withRegionExtractor(Extractor<R,PbfWay>)
        +Settings<R> withType(Class<R> type)
        --(checks)--
        +boolean isValid()
        --(factory)--
        +RegionFactory<R> regionFactory()
        +Settings<R> withRegionFactory(RegionFactory<R>)
        --(math)--
        +Maximum maximumObjects()
        +Maximum maximumPolygonsPerObject()
        +Area minimumBorderArea()
        +Settings<R> withMaximumObjects(Maximum maximumObjects)
        +Settings<R> withMaximumPolygonsPerObject(Maximum maximumPolygonsPerObject)
        +Settings<R> withMinimumBorderArea(Area minimumBorderArea)
    }
    
@enduml

